which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
length(which(temp==1))
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp<-sort(sample(days,size=100,replace = TRUE))
which(temp==1)
temp
temp[1]<-1
which(temp==1)
temp[2]<-1
which(temp==1)
length(which(temp==1))
choose(100,2)*(364/365)^98/365^2
results<-do(10000)*(length(which(sample(days,size=100,replace = TRUE)==1))==2)
mean(~length,data=results)
head(results)
mean(results$result)
mean(~result,data=results)
qnorm(0.05,335,72)
pnorm(216,335,72)
pnorm(216,335,72)+90
qnorm(pnorm(216,335,72)+90,335,72)
qnorm((pnorm(216,335,72)+90),335,72)
qnorm(90.05,335,72)
qnorm(90.05,335,72)
qnorm(pnorm(216,335,72)+.9,335,72)
install.packages("VennDiagram")
venn.plot <- draw.single.venn(100, "First");
grid.draw(venn.plot);
grid.newpage();
library(VennDiagram)
venn.plot <- draw.single.venn(100, "First");
grid.draw(venn.plot);
grid.newpage();
draw.pairwise.venn(100, 70, 30, c("First", "Second"))
ree-set diagram
venn.plot <- draw.triple.venn(65, 75, 85,
35, 15, 25, 5, c("First", "Second", "Third"))
draw.triple.venn(65, 75, 85,
35, 15, 25, 5, c("First", "Second", "Third"))
draw.triple.venn(
area1 = 65,
area2 = 75,
area3 = 85,
n12 = 35,
n23 = 15,
n13 = 25,
n123 = 5,
category = c("First", "Second", "Third"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
draw.triple.venn(20, 40, 60, 0, 0, 0, 0,
c("First", "Second", "Third"), sep.dist = 0.1, rotation.degree = 30)
draw.triple.venn(20, 40, 60, 0, 0, 0, 0,
c("First", "Second", "Third"), sep.dist = 0.1, rotation.degree = 30)
draw.triple.venn(
area1 = 65,
area2 = 75,
area3 = 85,
n12 = 35,
n23 = 15,
n13 = 25,
n123 = 5,
category = c("First", "Second", "Third"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
knitr::opts_chunk$set(echo = TRUE)
library(cubature) # load the package "cubature"
f <- function(x) { (x[1] + x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))
f2 <- function(x) { (2*x[1]^2 + x[1]) } # "x" is vector
adaptIntegrate(f2, lowerLimit = c(0), upperLimit = c(0.2))
2*.2^2
2*.2^2+.2
(2*.2^2+.2)/3
f2 <- function(x) { (2*x[1]^2 + x[1])/3 } # "x" is vector
adaptIntegrate(f2, lowerLimit = c(0), upperLimit = c(0.2))
1/210
.97*.92
1.34*.67
8/9
.29*.35
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
f <- function(x) { x[1]*(x[1] + x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))
f <- function(x) { x[1]^2*(x[1] + x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))
f <- function(x) { x[1]^2*(x[1] + x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))$integral
f <- function(x) { x[1]^2*(x[1] + x[2]) } # "x" is vector
round(adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))$integral,3)
f <- function(x) { x[1]*x[2]*(x[1] + x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))
f <- function(x) { x[1]*x[2]*(x[1] + x[2]) } # "x" is vector
round(adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))$integral,3)
?pmin
pmin(c(1,10))
pmin(1,10)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
30*10/(6^5)
sample(1:6,size=5,replace=TRUE)
set.seed(23)
sample(1:6,size=5,replace=TRUE)
set.seed(23)
unique(sample(1:6,size=5,replace=TRUE))
set.seed(23)
table(sample(1:6,size=5,replace=TRUE))
set.seed(23)
table(sample(1:6,size=5,replace=TRUE))==2
set.seed(23)
sum(table(sample(1:6,size=5,replace=TRUE))==2)
set.seed(23)
table(sample(1:6,size=5,replace=TRUE))
set.seed(23)
temp<-table(sample(1:6,size=5,replace=TRUE))
temp
sum(temp==2)
sum(temp==2) & sum(temp==3)
temp<-c(1,1,1,2,2)
temp<-table(temp)
temp
sum(temp==2) & sum(temp==3)
full_house <-function(s){
temp<-table(x)
sum(temp==2) & sum(temp==3)
}
full_house(temp)
temp
temp<-c(1,1,1,2,2)
full_house(temp)
full_house <-function(x){
temp<-table(x)
sum(temp==2) & sum(temp==3)
}
temp<-c(1,1,1,2,2)
full_house(temp)
set.seed(751)
do(100)*full_house(sample(1:6,size=5,replace=TRUE))
set.seed(751)
results<-do(100)*full_house(sample(1:6,size=5,replace=TRUE))
results
set.seed(751)
results<-do(100)*full_house(sample(1:6,size=5,replace=TRUE))
mean(~full_house,data=results)
set.seed(751)
results<-do(1000)*full_house(sample(1:6,size=5,replace=TRUE))
mean(~full_house,data=results)
set.seed(751)
results<-do(10000)*full_house(sample(1:6,size=5,replace=TRUE))
mean(~full_house,data=results)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
x<-seq(-3,3,0.001)
fx<-x^2/18
gf_line(fx~x,ylab="f(x)",title="pdf of X") %>%
gf_theme(theme_classic())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
library(cubature) # load the package "cubature"
f <- function(x) { (x[1] * x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 2))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
set.seed(2011)
my_data<-data.frame(misprints=c(rpois(5000,2),rpois(5000,5)))
head(my_data)
dim(my_data)
library(mosaic)
?rflip
rflip(5,.5)
do(10)*rflip(5,.5)
do(10)*rflip(5,.5)['prop']
(do(10)*rflip(5,.5))['prop']
(do(10)*rflip(5,.5))['prop']==.4
count((do(10)*rflip(5,.5))['prop']==.4)
1-pnorm(400,335,72)
do(10)*rflip(5,.5)
do(10)*rflip(5,.5)[2]
(do(10)*rflip(5,.5))[2]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
gf_histogram(~misprints,data=my_data)
gf_histogram(~misprints,data=my_data,breaks=seq(-0.5, 15.5, by=1))
gf_histogram(~misprints,data=my_data,breaks=seq(-0.5, 15.5, by=1)) %>%
gr_theme(theme_classic())
gf_histogram(~misprints,data=my_data,breaks=seq(-0.5, 15.5, by=1)) %>%
gf_theme(theme_classic())
gf_histogram(~misprints,data=my_data,breaks=seq(-0.5, 15.5, by=1)) %>%
gf_theme(theme_classic()) %>%
gf_labs(x="Number of Misprints")
gf_bar(~misprints,data=my_data)
gf_bar(~misprints,data=my_data)%>%
gf_theme(theme_classic()) %>%
gf_labs(x="Number of Misprints")
(0.133+0.086+0.081)/0.4
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,3,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
set.seed(11)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
set.seed(11)
set.seed(11)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
rbinom(1,5,.75)
set.seed(11)
rbinom(1,5,.75)
set.seed(17)
rbinom(1,5,.75)
rbinom(1,5,.75)
knitr::opts_chunk$set(echo = TRUE)
library(cubature) # load the package "cubature"
f <- function(x) { (x[1] + x[2]) } # "x" is vector
adaptIntegrate(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))
adaptIntegrate(f, lowerLimit = c(0, 0.75), upperLimit = c(0.2, 1))
f2 <- function(x) { (4*x[1] + 1)/3 } # "x" is vector
adaptIntegrate(f2, lowerLimit = c(0), upperLimit = c(0.2))
2*.2^2+.2
2*.2^2+.2
0.28/3
?matrix
matrix(c(1,2,3,4),nrow=2)
temp<-matrix(c(1,2,3,4),nrow=2)
temp
sum(temp)
temp/sum(temp)
dataframe(num=crep(0,39),,weather=c(rep("clear,28"),c("Light",11)))
dataframe(num=rep(0,39),weather=c(rep("clear,28"),c("Light",11)))
tibble(num=rep(0,39),weather=c(rep("clear,28"),c("Light",11)))
library(tidyverse)
tibble(num=rep(0,39),weather=c(rep("clear,28"),c("Light",11)))
rep(0,39)
data.frame(num=rep(0,39))
data.frame(num=rep(0,39),weather=c(rep("clear,28"),c("Light",11)))
data.frame(num=rep(0,39),weather=c(rep("clear",28),c("Light",11)))
data.frame(num=rep(0,39),weather=c(rep("clear",28),rep("Light",11)))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
library(mosaicCalc)
results %>%
gf_density(~sqrt,xlab="X")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
library(mosaicCalc)
integrate(function(x)2*x,0,1)
library(mosaicCalc)
x<-seq(-0.2,1.2,0.001)
y<-pmin(x^2*(x>0),1)
plot(x,y,type="l",ylab="F(x)",main="cdf of X")
results %>%
gf_density(~sqrt,xlab="X")
sqrt(runif(1))
curve(2*x,from=0,to=1,ylab="f(x)",main="pdf of X")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
curve(2-x/200+3/20,from=0,to=40,ylab="f(x)",main="pdf of T")
curve(I(x>10)*2-x/200+3/20,from=0,to=40,ylab="f(x)",main="pdf of T")
curve(2-x/200+3/20,from=10,to=30,ylab="f(x)",main="pdf of T")
curve(-x/200+3/20,from=10,to=30,ylab="f(x)",main="pdf of T")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
curve(-x/200+3/20,from=10,to=30,ylab="f(x)",main="pdf of T")
integrate(function(x)-x/200+3/20,10,30)
uniroot(function(x)x^2/400+3*x/200-5/4-.5,c(10,30))
uniroot(function(x)x^2/400+3*x/200-5/4-.5,c(10,30))
integrate(function(x)-x/200+3/20,10,23.62)
uniroot(function(x)x^2/400+3*x/200-5/4,c(10,30))
uniroot(function(x)x^2/400+3*x/20-5/4,c(10,30))
uniroot(function(x)x^2/400+3*x/20-5/4-.5,c(10,30))
uniroot(function(x)-x^2/400+3*x/20-5/4-.5,c(10,30))
integrate(function(x)-x/200+3/20,10,15.857)
uniroot(function(x)-x^2/400+3*x/20-5/4-.5,c(10,30))$root
T(.5)
T <- function(y){
uniroot(function(x)-x^2/400+3*x/20-5/4-y,c(10,30))$root
}
T(.5)
integrate(function(x)-x/200+3/20,10,15.857)
T(.5)
T<-Vectorize(T)
T<-Vectorize(T)
T(c(.5,.75))
integrate(function(x)-x/200+3/20,10,20)
T(runif(3))
set.seed(1144)
sim_exercise <- data_frame(T1=T(runif(10000)),T2=T(runif(10000)))
set.seed(1144)
sim_exercise <- tibble(T1=T(runif(10000)),T2=T(runif(10000)))
head(sim_exercise)
inspect(sim_exercise)
gf_histogram(~T1,data=sim_exercise)
gf_dens(~T1,data=sim_exercise)
sim_exercise %>%
mutate(T_sum=T1+T2) %>%
summarise(prob=mean(T_sum<40))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
results <- do(10000)*sqrt(runif(1))
inspect(results)
results %>%
gf_density(~sqrt,xlab="X")
y_results <- results %>%
transmute(y=log(sqrt))
y_results %>%
gf_density(~y,xlab="X")
inspect(y_results)
results <- do(100000)*abs(diff(runif(2,5,6)))
results %>%
gf_density(~abs)
results %>%
gf_histogram(~abs)
inspect(results)
data.frame(results) %>%
summarise(mean(abs<=5/60))
z_cdf <- function(x) {
mean(results$abs<=x)
}
z_cdf<- Vectorize(z_cdf)
z_cdf(5/60)
gf_line(z_cdf(seq(0,1,.01))~seq(0,1,.01),xlab="Time Difference",ylab="CDF") %>%
gf_theme(theme_classic())
uniroot(function(x)z_cdf(x)-.5,c(.25,35))$root
y_pdf <- function(x) {
1/(2*sqrt(x))
}
y_pdf<- Vectorize(y_pdf)
integrate(y_pdf,0,1)
gf_line(y_pdf(seq(0,1,.01))~seq(0,1,.01),xlab="Time Difference",ylab="CDF") %>%
gf_theme(theme_classic())
gf_line(y_pdf(seq(0.01,1,.01))~seq(0.01,1,.01),xlab="Time Difference",ylab="CDF") %>%
gf_theme(theme_classic())
y_pdf <- function(y) {
1/(2*sqrt(y))
}
y_pdf<- Vectorize(y_pdf)
integrate(y_pdf,0,1)
set.seed(354)
results <- do(100000)*abs(diff(runif(2,5,6)))
head(results)
data.frame(results) %>%
summarise(mean(abs<=5/60))
z_cdf(5/60)
uniroot(function(x)z_cdf(x)-.5,c(.25,35))$root
0.292*60
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
integrate(function(x)-x/200+3/20,10,15.857)
gf_dens(~T1,data=sim_exercise) %>%
gf_theme(theme_classic())
