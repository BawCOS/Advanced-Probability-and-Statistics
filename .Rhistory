par(mar=c(2,1,1,1), las=1, mgp=c(0.9,0.7,0))
plot(y5 ~ x, xlab = "(e)", ylab = "", yaxt = "n", xaxt = "n", pch=19, col=COL[1], cex.lab = 1.75, cex.axis = 1.75)
dev.off()
y6 = rnorm(length(x), mean = 0, sd = 1)
###
pdf("figures/association6.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(0.9,0.7,0))
plot(y6 ~ x, xlab = "(f)", ylab = "", yaxt = "n", xaxt = "n", pch=19, col=COL[1], ylim = c(-10,10), cex.lab = 1.75, cex.axis = 1.75)
dev.off()
set.seed(83629)
x = seq(1,50,1)
y = -2 * x + 20 + rnorm(length(x), mean = 0, sd = 10)
xInf = c(x[1:49], 200)
yLev = c(y[1:49], -370)
yOut = c(y[1:25], y[26]+100, y[27:50])
###
pdf("figures/outInf1.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)
lmInf = lm(y ~ xInf)
abline(lmInf, col = COL[2])
dev.off()
###
pdf("figures/outLev1.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)
plot(yLev ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)
lmLev = lm(yLev ~ xInf)
abline(lmLev, col = COL[2])
dev.off()
###
pdf("figures/outOut1.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)
lmOut = lm(yOut~ x)
abline(lmOut, col = COL[2])
dev.off()
##
##
x = seq(1,50,1)
y = 3 * x + 3 + rnorm(length(x), mean = 0, sd = 10)
xInf = c(x[1:49], -50)
yInf = c(y[1:49], -300)
yOut = c(y[1:25], y[26]+100, y[27:50])
pdf("figures/outInf2.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)
lmInf = lm(y ~ xInf)
abline(lmInf, col = COL[2])
dev.off()
###
pdf("figures/outInf3.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)
plot(yInf ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)
abline(lm(yInf ~ xInf), col = COL[2])
dev.off()
###
pdf("figures/outOut2.pdf", 5.5, 4.3)
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)
lmOut = lm(yOut~ x)
abline(lmOut, col = COL[2])
dev.off()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
library(openintro)
bac %>%
gf_point(bac~beers) %>%
gf_labs(x="Number of cans of beer",y="BAC") %>%
gf_theme(theme_classic()) %>%
gf_refine(scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9)))
bac_mod <- lm(bac~beers,data=bac)
summary(bac_mod)
plot(star_mod,1)
plot(bac_mod,1)
plot(bac_mod,2)
bac
plot(bac_mod,3)
plot(bac_mod,5)
star_mod <- lm(calories~carb,data=starbucks)
do(1)*star_mod
star_mod
do(2)*lm(calories~carb,data=starbucks)
do(2)*lm(calories~carb,data=resample(starbucks))
set.seed(532)
results <- do(1000)*lm(calories~carb,data=resample(starbucks))
head(results)
results %>%
gf_histogram(~carb)
obs<-do(1)*star_mod
obs
results %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb)
results %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb,color="red") %>%
gf_theme(theme_classic())
cdata(~carb,data=results)
confint(star_mod)
cdata(~r.squared,data=results)
results %>%
gf_histogram(~r.squared) %>%
gf_vline(xintercept = obs$r.squared,color="red") %>%
gf_theme(theme_classic())
str(loans_full_schema)
results <- do(1000) * lm( calories~carb, data = resample(star_mod)) # resampled residuals
results <- do(1000) * lm( calories~carb, data = resample(star_mod)) # resampled residuals
results %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb,color="red") %>%
gf_theme(theme_classic())
results %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb,color="red") %>%
gf_theme(theme_classic())
results %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb,color="red") %>%
gf_theme(theme_classic())
cdata(~carb,data=results)
predict(star_mod,newdata = data.frame(carb=60))
predict(star_mod,newdata = data.frame(carb=60),interval="confidence")
head(results)
results %>%
mutate(pred=intercept+carb*60) %>%
cdata(~pred,data=.)
results %>%
mutate(pred=Intercept+carb*60) %>%
cdata(~pred,data=.)
star_mod$residuals
predict(star_mod,newdata = data.frame(carb=60),interval="prediction")
length(results)
dim(results)
class(results)
?cbind
results %>%
mutate(pred=Intercept+carb*60) %>%
cbind(sample(star_mod$residuals,size=1000,replace = TRUE))
results %>%
mutate(pred=Intercept+carb*60) %>%
cbind(resid=sample(star_mod$residuals,size=1000,replace = TRUE))
results %>%
mutate(pred=Intercept+carb*60) %>%
cbind(resid=sample(star_mod$residuals,size=1000,replace = TRUE)) %>%
mutate(pred_ind=pred+resid) %>%
cdata(~pred_ind,data=.)
str(loans_full_schema)
str(loan50)
?lona50
?loan50
table(loan50$homeownership)
table(loans_full_schema$homeownership)
loans_full_schema %>%
droplevels(homeownership) %>%
str()
names(loans_full_schema)
loans_full_schema %>%
droplevels(homeownership)
loans_full_schema %>%
droplevels() %>%
str()
loans_full_schema %>%
droplevels() %>%
group_by(homeownership) %>%
count()
loans_full_schema %>%
droplevels() %>%
group_by(homeownership) %>%
mutate(num_rows=n())
loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
mutate(num_rows=n())
?slice_sample
temp <- loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
sample_slice(n=100)
temp <- loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
slice_sample(n=100) %>%
ungroup()
#  mutate(num_rows=n())
head(temp)
tally(~homeownership,temp)
temp <- loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
slice_sample(prop=0.01) %>%
ungroup()
#  mutate(num_rows=n())
tally(~homeownership,loan)
tally(~homeownership,temp)
tally(~homeownership,loans_full_schema)
tally(~homeownership,temp,format = "proportion")
tally(~homeownership,loans_full_schema,format = "proportion")
library(openintro)
str(loans_full_schema)
dim(loans_full_schema)
tally(~homeownership,data=loans_full_schema)
tally(~homeownership,data=loans_full_schema,format="proportion")
loans100 <- loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
slice_sample(prop=0.01) %>%
ungroup()
tally(~homeownership,data=loans100,format="proportion")
loans100 %>%
gf_boxplot(interest_rate~homeownership)
loans100 %>%
gf_boxplot(interest_rate~homeownership) %>%
gf_theme(theme_classic())
str(loans100)
loan_mod<-lm(interes_rate ~ homeownership,data=loans100)
loan_mod<-lm(interest_rate ~ homeownership,data=loans100)
summary(loan_mod)
loans100 %>%
filter(homeownership == "MORTGAGE") %>%
summarise(average=mean(homeownership))
loans100 %>%
filter(homeownership == "MORTGAGE")
loans100 %>%
filter(homeownership == "MORTGAGE") %>%
summarise(average=mean(interest_rate))
loans100 %>%
group_by(homeownership) %>%
summarise(average=mean(interest_rate))
anova(loan_mod)
TukeyHSD(aov(interest_rate~homeownership, data=loans100))
plot(loan_mod)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
set.seed(532)
results <- do(1000)*lm(interest_rate ~ homeownership,data=resample(loans100))
head(results)
cdata(~carb,data=results_resid)
results_resid <- do(1000) * lm( calories~carb, data = resample(star_mod)) # resampled residuals
results_resid %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb,color="red") %>%
gf_theme(theme_classic())
cdata(~carb,data=results_resid)
obs<-do(1)*loan_mod
obs
results %>%
gf_histogram(~homeownershipOWN) %>%
gf_vline(xintercept = obs$homeownershipOWN,color="red") %>%
gf_theme(theme_classic())
cdata(~homeownershipOWN,data=results)
confint(loan_mod)
results %>%
mutate(own_rent=homeownershipOWN - homeownershipRENT)
results %>%
mutate(own_rent=homeownershipOWN - homeownershipRENT) %>%
cdata(~own_rent,data=.)
plot(loan_mod,2)
plot(loan_mod,3)
loans100 %>%
group_by(homeownership) %>%
summarise(average=mean(interest_rate),std_dev=sd(interest_rate))
plot(loan_mod,5)
gpa_study_hours
str(loans_full_schema)
tally(~term,loans_full_schema)
tally(~application_type,loans_full_schema)
unique(loans_full_schema$application_type)
summary(loans_full_schema)
unique(loans_full_schema$application_type)
unique(loans_full_schema$initial_listing_status)
head(mariokart)
head(mariokart)
mario_mod <- lm(total_pr~cond,data=mariokart)
summary(mario_mod)
mariokart %>%
gf_point(total_pr~cond) %>%
gr_lm() %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_lm() %>%
gf_theme(theme_classic())
gf_lm
?gf_lm
mariokart %>%
gf_point() %>%
gf_lm(total_pr~cond) %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_lm(total_pr~cond) %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_lm(stat="lm") %>%
gf_theme(theme_classic())
?gf_lm
mariokart %<%
group_by(cond) %>%
summarize(xbar=mean(total_pr), stand_dev=sd(total_pr))
mariokart %>%
group_by(cond) %>%
summarize(xbar=mean(total_pr), stand_dev=sd(total_pr))
mariokart %>%
gf_point(total_pr~as.numeric(cond)) %>%
gf_lm() %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_theme(theme_classic())
mariokart %>%
filter(total_pr > 100)
mariokart_new <- mariokart %>%
filter(total_pr <= 100) %>%
select(total_pr,cond,stock_photo,duration,wheels)
mario_mod2 <- lm(total_pr~cond,data=mariokart_new)
summary(mario_mod2)
mariokart_new %>%
gf_point(total_pr~cond) %>%
gf_theme(theme_classic())
summary(mariokart_new)
mariokart_new %>%
gf_boxplot(total_pr~cond) %>%
gf_theme(theme_classic())
plot(mario_mod2,2)
plot(mario_mod2,3)
plot(mario_mod2,5)
dim(mariokart_new)
mario_mod_multi <- lm(total_pr~., data=mariokart_new)
summary(mario_mod_multi)
mario_mod_multi$residuals[1]
library(broom)
tidy(mario_mod_multi)
augment(mario_mod_multi)
augment(mario_mod_multi)[1]
augment(mario_mod_multi)
augment(mario_mod_multi) %>%
head(1)
augment(mario_mod_multi) %>%
head(1)
4.901^2
names(mario_mod_multi)
names(summary(mario_mod_multi))
tidy(mario_mod_multi)
summary(mario_mod_multi)$sigma
(summary(mario_mod_multi)$sigma)^2
mariokart_new %>%
summarise(total_var=var(total_pr))
1-24.0237/83.05864
summary(mario_mod_multi)$r.squared
augment(mario_mod_multi)
augment(mario_mod_multi) %>%
summarise(var_resid=var(.resid))
1-23.34/83.05864
summary(mario_mod_multi)$r.squared
names(summary(mario_mod_multi))
summary(mario_mod_multi)$adj.r.squared
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
head(eamil)
head(email)
library(openintro)
data(COL)
p  <- seq(0.0001, 0.9999, 0.0002)
lp <- log(p/(1-p))
pts  <- seq(0.01, 0.99, length.out=25)
R    <- c(-6,6)
adj  <- 0.07
adj1 <- 0.02
plot(lp, p, ylab="", xlab=expression(logit(p[i])), xlim=c(-5.8, 6.5), ylim=c(-0.05, 1.1), type="n")
lines(lp, p, type="l", col=COL[5], lwd=1.5)
mtext(expression(p[i]), 2, 2.4)
abline(h=0:1, lty=2, col=COL[1], lwd=1.5)
this <- which.min(abs(p-0.2))
#lines(rep(p[this], 2), c(-50, lp[this]), col="#00000044")#, lty=3, lwd=2)
#lines(c(-1, p[this]), rep(lp[this], 2), col="#00000044")#, lty=3, lwd=2)
LP    <- c(seq(6, -5, -1)) #log(P/(1-P))
P     <- exp(LP)/(1+exp(LP))#1-c(0.01, 0.05, 0.1, 0.20, 0.3, 0.4, 0.5)
POS   <- c(3, 1, 3, 1, 2, 2, 2, 2, 4, 3, 1, 3)
xOFF  <- c()
Round <- c(3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3)
for(i in 1:length(LP)){
points(LP[i], P[i], col=COL[4], lwd=2)
t1   <- format(round(c(LP,0.9), Round[i]))[i]
t2   <- format(round(P, Round[i]))[i]
temp <- paste("(", t1, ", ", t2, ")", sep="")
text(LP[i], P[i], temp, cex=0.6, pos=POS[i], col=COL[5])
}
#points(lp[this], p[this])
#text(lp[this], p[this], "(-1.39, 0.20)", cex=0.7, pos=4)
# plot(R, c(-0.4, 2.4), type="n", xlab="", ylab="", axes=FALSE)
# lines(0:1, c(2,2))
# segments(0:1, 2-adj, 0:1, 2+adj)
# text(0:1, 2+adj1, 0:1,pos=3)
# text(0.5, 2.1, expression(p[i]), pos=3)
# #arrows(0, 1, R[2], 1, length=0.08)
# #segments(0:(R[2]-1), 1-adj, 0:(R[2]-1), 1+adj)
# pts1 <- pts/(1-pts)
# #segments(pts, 2, pts1, 1)
# arrows(R[1], 0, R[2], 0, length=0.08, code=3)
# segments((R[1]+1):(R[2]-1), -adj, (R[1]+1):(R[2]-1), adj)
# pts2 <- log(pts1)
# arrows(pts, 2, pts2, 0, length=0.05)
# text((R[1]+1):(R[2]-1), rep(-adj1, R[2]-R[1]-2), (R[1]+1):(R[2]-1), pos=1, cex=0.8)
# text(-4, 1, expression(logit(p[i])))
# #abline(h=0:1)
dev.off()
library(openintro)
data(COL)
p  <- seq(0.0001, 0.9999, 0.0002)
lp <- log(p/(1-p))
pts  <- seq(0.01, 0.99, length.out=25)
R    <- c(-6,6)
adj  <- 0.07
adj1 <- 0.02
plot(lp, p, ylab="", xlab=expression(logit(p[i])), xlim=c(-5.8, 6.5), ylim=c(-0.05, 1.1), type="n")
lines(lp, p, type="l", col=COL[5], lwd=1.5)
mtext(expression(p[i]), 2, 2.4)
abline(h=0:1, lty=2, col=COL[1], lwd=1.5)
this <- which.min(abs(p-0.2))
#lines(rep(p[this], 2), c(-50, lp[this]), col="#00000044")#, lty=3, lwd=2)
#lines(c(-1, p[this]), rep(lp[this], 2), col="#00000044")#, lty=3, lwd=2)
LP    <- c(seq(6, -5, -1)) #log(P/(1-P))
P     <- exp(LP)/(1+exp(LP))#1-c(0.01, 0.05, 0.1, 0.20, 0.3, 0.4, 0.5)
POS   <- c(3, 1, 3, 1, 2, 2, 2, 2, 4, 3, 1, 3)
xOFF  <- c()
Round <- c(3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3)
for(i in 1:length(LP)){
points(LP[i], P[i], col=COL[4], lwd=2)
t1   <- format(round(c(LP,0.9), Round[i]))[i]
t2   <- format(round(P, Round[i]))[i]
temp <- paste("(", t1, ", ", t2, ")", sep="")
text(LP[i], P[i], temp, cex=0.6, pos=POS[i], col=COL[5])
}
#points(lp[this], p[this])
#text(lp[this], p[this], "(-1.39, 0.20)", cex=0.7, pos=4)
# plot(R, c(-0.4, 2.4), type="n", xlab="", ylab="", axes=FALSE)
# lines(0:1, c(2,2))
# segments(0:1, 2-adj, 0:1, 2+adj)
# text(0:1, 2+adj1, 0:1,pos=3)
# text(0.5, 2.1, expression(p[i]), pos=3)
# #arrows(0, 1, R[2], 1, length=0.08)
# #segments(0:(R[2]-1), 1-adj, 0:(R[2]-1), 1+adj)
# pts1 <- pts/(1-pts)
# #segments(pts, 2, pts1, 1)
# arrows(R[1], 0, R[2], 0, length=0.08, code=3)
# segments((R[1]+1):(R[2]-1), -adj, (R[1]+1):(R[2]-1), adj)
# pts2 <- log(pts1)
# arrows(pts, 2, pts2, 0, length=0.05)
# text((R[1]+1):(R[2]-1), rep(-adj1, R[2]-R[1]-2), (R[1]+1):(R[2]-1), pos=1, cex=0.8)
# text(-4, 1, expression(logit(p[i])))
# #abline(h=0:1)
?glm
email %>%
select(spam,to_multiple) %>%
summary()
email_mod <- glm(spam~to_multiple,data=email,family="binomial")
summary(email_mod)
email_mod2 <- glm(spam~.,data=email,family="binomial")
summary(email_mod2)
email_sub<-email %>%
select(spam,to_multiple,cc,attach,dollar,winner,inherit,password,format,re_subj,exclaim_subj)
email_mod2 <- glm(spam~.,data=email_sub,family="binomial")
summary(email_mod2)
str(email_sub)
update.lm
email_mod2 <- glm(spam~to_multiple+cc+attach+dollar+winner+inherit+password+format+re_subj,
data=email_sub,family="binomial")
summary(email_mod2)
email_mod2 <- glm(spam~to_multiple+attach+dollar+winner+inherit+password+format+re_subj,
data=email_sub,family="binomial")
summary(email_mod2)
summary(email_mod)
summary(email_mod2)
dim(email_sub)
augment(email_mod2)
library(broom)
augment(email_mod2)
augment(email_mod2) %>%
gf_point(spam~.hat)
augment(email_mod2) %>%
gf_point(spam~.hat,alpha=.2)
noise <- rnorm(3921, sd=0.08)
augment(email_mod2) %>%
gf_point(spam~.hat+noise,alpha=.2)
augment(email_mod2) %>%
gf_point(spam~(.hat+noise),alpha=.2)
augment(email_mod2) %>%
gf_point((spam+noise)~.hat,alpha=.2)
augment(email_mod2)
augment(email_mod2) %>%
summarise(max_hat=max(.hat))
