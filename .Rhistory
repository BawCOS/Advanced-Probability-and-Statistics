mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,weights=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,weights=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(1)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,weights=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(1)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
birth_data_weights <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births)) %>%
gf_line(n~day_of_year)
birth_data_weights <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births)) %>%
gf_line(n~day_of_year)
birth_data_weights <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births)) %>%
gf_line(n~day_of_year)
birth_data_weights <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births)) %>%
gf_line(n~day_of_year)
Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births)) %>%
gf_line(n~day_of_year)
birth_data <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
birth_data <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
head(birth_data_weights)
head(birth_data)
birth_data %>%
gf_line(n~day_of_year)
birth_data %>%
gf_line(n~day_of_year,xlab="Day of the year",ylab="Number of births")
birth_data %>%
gf_line(n~day_of_year,xlab="Day of the year",ylab="Number of births") %>%
gf_vline(xintercept = 359)
?gf_vline
birth_data %>%
gf_line(n~day_of_year,xlab="Day of the year",ylab="Number of births") %>%
gf_vline(xintercept = ~359)
birth_data_weights <- birth_data %>%
select(n)
birth_data_weights
birth_data_weights <- birth_data %>%
select(n) %>%
pull()
birth_data_weights
sample(days,size=18,replace = TRUE,weights=birth_data_weights)
set.seed(1)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,weights=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(1)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(1)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(1)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(2020)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(2020)
(do(10000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(2020)
(do(10000)*length(unique(sample(days,size=18,replace = TRUE)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(2020)
(do(10000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(20)
(do(10000)*length(unique(sample(days,size=18,replace = TRUE)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
set.seed(20)
(do(10000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
pbirthday(18)
set.seed(20)
(do(100000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
pbirthday(18)
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,0,1)) %>%
summarise(prob=mean(match))
knitr::opts_chunk$set(echo = TRUE)
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
gf_bar(~length)
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,0,1)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==23,0,1)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
1 - prod(365)/365^
1 - prod(365)/365^2
prod(365)/365^2
(do(10000)*length(unique(sample(days,size=2,replace = TRUE)))) %>%
mutate(match=if_else(length==2,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=2,replace = TRUE)))) %>%
mutate(match=if_else(length==2,0,1)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
gf_bar(~length)
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
gf_bar(~length)
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,0,1)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
gf_bar(~length)
(do(10000)*length(unique(sample(days,size=2,replace = TRUE)))) %>%
mutate(match=if_else(length==1,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=2,replace = TRUE)))) %>%
mutate(match=if_else(length==1,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
prod(365:364)/365^3
(do(10000)*length(unique(sample(days,size=3,replace = TRUE)))) %>%
mutate(match=if_else(length==2,1,0)) %>%
summarise(prob=mean(match))
prod(365:364)
prod(365:364)/365^3
3*prod(365:364)/365^3
(do(10000)*length(unique(sample(days,size=3,replace = TRUE)))) %>%
mutate(match=if_else(length==2,1,0)) %>%
summarise(prob=mean(match))
(do(100000)*length(unique(sample(days,size=3,replace = TRUE)))) %>%
mutate(match=if_else(length==2,1,0)) %>%
summarise(prob=mean(match))
(do(1000000)*length(unique(sample(days,size=3,replace = TRUE)))) %>%
mutate(match=if_else(length==2,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
365-21
3*prod(365:344)/365^23
choose(23,2)*prod(365:344)/365^23
exactly_two <- function(n){
choose(n,2)*prod(365:(365-(n-2)))/365^n
}
exactly_two(23)
exactly_two <- Vectorize(exactly_two)
gf_line(exactly_two(1:100)~ seq(1,100),xlab="Number of People",ylab="Probability of Match",title="Probability of exactly least 2 people with matching birthdays")
knitr::opts_chunk$set(echo = TRUE)
(do(10)*table(sample(days,size=23,replace = TRUE))
do(10)*table(sample(days,size=23,replace = TRUE))
library(mosaic)
library(tidyverse)
do(10)*table(sample(days,size=23,replace = TRUE))
table(sample(days,size=23,replace = TRUE))
table(sample(days,size=23,replace = TRUE))
table(sample(days,size=23,replace = TRUE)) == 2
table(sample(days,size=23,replace = TRUE)) == 2
sum(table(sample(days,size=23,replace = TRUE)) == 2)
sum(table(sample(days,size=23,replace = TRUE)) == 2)
sum(table(sample(days,size=23,replace = TRUE)) == 2)
sum(table(sample(days,size=23,replace = TRUE)) == 2)
sum(table(sample(days,size=23,replace = TRUE)) == 2)
sum(table(sample(days,size=23,replace = TRUE)) == 2)
sum(table(sample(days,size=23,replace = TRUE)) == 2)
do(10)*sum(table(sample(days,size=23,replace = TRUE)) == 2)
do(10)*sum(table(sample(days,size=23,replace = TRUE)) == 2)
do(10)*(sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)
do(10)*(sum(table(sample(days,size=23,replace = TRUE)) == 2)==1) %>%
summarise(prob=mean(result))
do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)+0)
do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)+0) %>%
summarise(prob=mean(result))
(do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)+0)) %>%
summarise(prob=mean(result))
(do(100)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)+0)) %>%
summarise(prob=mean(result))
(do(1000)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
choose(23,3)*prod(365:345)/365^23
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
choose(23,3)*prod(365:345)/365^23
(do(100000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
choose(23,3)*prod(365:345)/365^23
(do(100000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=3,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
1/365^2
(do(10000)*((sum(table(sample(days,size=3,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=4,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=5,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=6,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
choose(6,3)*prod(365:(365-3))/365^6
(do(10000)*((sum(table(sample(days,size=10,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
choose(10,3)*prod(365:(365-7))/365^10
(do(10000)*((sum(table(sample(days,size=10,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
choose(23,3)*prod(365:(365-20))/365^23
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
set.seed(1)
(do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0))
set.seed(1)
(do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0))
set.seed(1)
(do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0))
set.seed(1)
(do(10)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0))
set.seed(1)
(do(100)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0))
set.seed(1)
(do(100)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
set.seed(1)
(do(400)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
table(sample(days,size=23,replace = TRUE)
table(sample(days,size=23,replace = TRUE))
set.seed(5)
table(sample(days,size=23,replace = TRUE))
set.seed(7)
table(sample(days,size=23,replace = TRUE))
set.seed(8)
table(sample(days,size=23,replace = TRUE))
set.seed(10)
table(sample(days,size=23,replace = TRUE))
set.seed(10)
table(sample(days,size=23,replace = TRUE))
set.seed(10)
temp <- table(sample(days,size=23,replace = TRUE))
temp
sum(temp==2)
(sum(temp==2) == 1)
(sum(temp==2) == 1)+0
(sum(temp==2) == 2)+0
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==2)+0)) %>%
summarise(prob=mean(result))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==21,1,0)) %>%
summarise(prob=mean(match))
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==21,1,0)) %>%
summarise(prob=mean(match))
choose(23,2)*choose(21,2)*prod(365:345)/365^23
library(mosaic)
?rflip
rflip(2)
names(rflip(2))
rflip
rflip(10)
rflip(10)
knitr::opts_chunk$set(echo = TRUE)
library(prob)
library(mosaic)
rflips(2)
rflip(2)
set.seed(12)
rflip(2)
set.seed(13)
rflip(2)
set.seed(14)
rflip(2)
set.seed(15)
rflip(2)
set.seed(16)
rflip(2)
set.seed(17)
rflip(2)
set.seed(18)
rflip(2)
?intersect
detach("package:prob", unload = TRUE)
library(prob)
S <- cards(makespace = T)
S
class(S)
set.seed(73)
rflip(3)
do(3)*rflip(3)
results <- do(1000)*rflip(3)
head(results)
results %>%
gf_bar(~heads)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
names(heads)
names(results)
class(results)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
data.frame(results) %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
class(data.frame(results))
knitr::opts_chunk$set(echo = TRUE)
library(prob)
library(mosaic)
library(tidyverse)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
data.frame(results) %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
View(results)
results %>%
gf_bar(~heads)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
results <- do(10000)*rflip(3)
head(results)
results %>%
gf_bar(~heads)
library(tidyverse)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
knitr::opts_chunk$set(echo = TRUE)
library(prob)
library(mosaic)
library(tidyverse)
set.seed(18)
rflip(2)
set.seed(73)
rflip(3)
results <- do(10000)*rflip(3)
head(results)
results %>%
gf_bar(~heads)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
library(prob)
## Define the sample space
S <- cards(makespace = T)
## Define event A
A <- subset(S, suit == "Club")
nrow(A) / nrow(S)
Prob(A)
## Define event B
B <- subset(S, rank %in% c(10, "J", "Q", "K", "A"))
Prob(B)
## Determine the union of A and B
unionAB <- union(A, B)
Prob(unionAB)
## Determine the intersect of A and B
intAB <- intersect(A, B)
Prob(intAB)
## Determine the complement of B
Bcomp <- setdiff(S, B)
Prob(Bcomp)
## Find outcomes in B but not in A
BnotA <- setdiff(B, A)
Prob(BnotA)
results %>%
filter(heads==2) %>%
summarize(prob=n()/10000)
write_csv(S,"Cards.csv")
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
Cards <- read_csv("data/Cards.csv")
Cards <- read_csv("data/Cards.csv")
head(Cards)
1/52
Cards <- read_csv("data/Cards.csv")
inspect(Cards)
Cards %>%
filter(suit == "Club")
Cards %>%
filter(suit == "Club") %>%
select(rank,suit)
?deal
deal(Cards,1)
do(3)*deal(Cards,1)
sample(Cards,1)
results <- do(1000)*sample(Cards,1)
head(results)
length(results)
results
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/1000)
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/10000)
results <- do(10000)*sample(Cards,1)
head(results)
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/10000)
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A")) %>%
select(rank,suit)
results %>%
filter(rank %in% c(10, "J", "Q", "K", "A")) %>%
summarize(prob=n()/10000)
20/53
results %>%
mutate(size=n())
results %>%
summarize(size=n())
results %>%
mutate(face=rank %in% c(10, "J", "Q", "K", "A"))
results %>%
mutate(face=rank %in% c(10, "J", "Q", "K", "A"))%>%
summarize(prob=mean(face))
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A"),suit=="Club")
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A"),suit=="Club") %>%
select(rank,suit)
results %>%
mutate(face=(rank %in% c(10, "J", "Q", "K", "A"))&(suit=="Club"))%>%
summarize(prob=mean(face))
5/52
sample(Cards,5)
do(2)*sample(Cards,5)
sample(Cards,5)$suit
identical(sample(Cards,5)$suit)
all.equal(sample(Cards,5)$suit)
unique(sample(Cards,5)$suit)
