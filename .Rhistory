new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x*y) %>%
summarize(Var = mean(z))
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x*y) %>%
summarize(Var = var(z))
?var
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x^2*y^2) %>%
summarize(Exy = mean(z))
.9970-(8/9)^2
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x*y) %>%
summarize(Var = var(z))
.9970-(8/9)^2
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x*y) %>%
summarize(Var = var(z)*9999/10000)
8*9
128-72
56/81
8/9
(8/9)^2
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x^2*y^2) %>%
summarize(Var = mean(z))
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x^2*y^2) %>%
summarize(Var = mean(z)-(8/9)^2)
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x*y) %>%
summarize(Var = var(z))
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=x*y) %>%
summarize(Var = var(z)*(10000-1)/10000)
set.seed(816)
new_data <- data.frame(x=2*sqrt(runif(10000)),y=sqrt(runif(10000)))
new_data %>%
mutate(z=(x*y-8/9)^2) %>%
summarize(Var = mean(z))
27*3
16*8
16*4
128-64
64/81
1-64/81
anscombe
library(MASS)
?mvrnorm
mvrnorm(2,mu=c(3,10),Sigma=matrix(c(1,1,1,1),2,2))
data.frame(mvrnorm(2,mu=c(3,10),Sigma=matrix(c(1,1,1,1),2,2)))
my_data<-data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,1,1,1),2,2)))
gf_point(X1~X2,data=my_data)
my_data<-data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,.5,.5,1),2,2)))
gf_point(X1~X2,data=my_data)
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,.5,.5,1),2,2)))
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,.5,.5,1),2,2))))
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,1,1,1),2,2))))
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,1,1,1),2,2))))
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,.8,.8,1),2,2))))
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,.5,.5,1),2,2))))
library(MASS)
gf_point(X1~X2,data=data.frame(mvrnorm(40,mu=c(3,10),Sigma=matrix(c(1,0,0,1),2,2))))
library(mosaic)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
my_data<-data.frame(misprints=c(rpois(5000,2),rpois(5000,5)))
gf_histogram(~misprints,data=my_data)
mean(~misprints,data=my_data)
1/6
1+2+3+4+5+6
21*21
441/36
?sample
sample(1:6)
sample(1:6,replace=TRUE)
sample(10,1:6,replace=TRUE)
sample(1:6,replace=TRUE)
sample(1:6,size=10,replace=TRUE)
sample(1:6,size=1,replace=TRUE)
sample(1:6,size=1,replace=TRUE)
sample(1:6,size=2,replace=TRUE)
product(sample(1:6,size=2,replace=TRUE))
sum(sample(1:6,size=2,replace=TRUE))
times(sample(1:6,size=2,replace=TRUE))
?sum
do(2)*(sample(1:6,size=2,replace=TRUE))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
do(2)*(sample(1:6,size=2,replace=TRUE)) %>%
mutate(prod=V1*V2)
(do(2)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2)
(do(100)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2) %>%
summarize(Expec=mean(prod))
(do(1000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2) %>%
summarize(Expec=mean(prod))
(do(10000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2) %>%
summarize(Expec=mean(prod))
(do(100000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2) %>%
summarize(Expec=mean(prod))
set.seed(1012)
(do(10000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2) %>%
summarize(Expec=mean(prod))
set.seed(1012)
(do(100000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(prod=V1*V2) %>%
summarize(Expec=mean(prod))
(do(1000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(max_value=max(V1,V2)) %>%
summarize(Expec=mean(max_value))
(do(10000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(max_value=max(V1,V2)) %>%
summarize(Expec=mean(max_value))
(do(100000)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(max_value=max(V1,V2)) %>%
summarize(Expec=mean(max_value))
do(10)*(sample(1:6,size=2,replace=TRUE))
(do(100)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(max_value=max(V1,V2)) %>%
summarize(Expec=mean(max_value))
(do(10)*(sample(1:6,size=2,replace=TRUE))) %>%
mutate(max_value=max(V1,V2))
(do(10)*(sample(1:6,size=2,replace=TRUE))) %>%
rowwise()%>%
mutate(max_value=max(V1,V2)) %>%
summarize(Expec=mean(max_value))
(do(10)*max(sample(1:6,size=2,replace=TRUE)))
(do(10)*max(sample(1:6,size=2,replace=TRUE))) %>%
summarize(Expec=mean(max))
(do(10000)*max(sample(1:6,size=2,replace=TRUE))) %>%
summarize(Expec=mean(max))
(do(100000)*max(sample(1:6,size=2,replace=TRUE))) %>%
summarize(Expec=mean(max))
sample(c(2,3,5),size=10,replace=TRUE)
which(sample(c(2,3,5),size=10,replace=TRUE)==2)
set.seed(1)
sample(c(2,3,5),size=10,replace=TRUE)
set.seed(1)
which(sample(c(2,3,5),size=10,replace=TRUE)==2)
set.seed(10)
sample(c(2,3,5),size=10,replace=TRUE)
set.seed(10)
temp<-sample(c(2,3,5),size=10,replace=TRUE)
temp
?first
cumsum(temp)
which(temp==2)
temp
which(temp==2)[1]
sample(c(2,3,5),size=20,replace=TRUE)
do(2)*sample(c(2,3,5),size=20,replace=TRUE)
?index
miner_time <- function(x){
index <- which(x==2)[1]
total<-cumsum(x)
return(total[index-1])
}
temp
miner_time(temp)
which(temp==2)
miner_time(temp)
miner_time <- function(x){
index <- which(x==2)[1]
total<-cumsum(x)
return(total[index])
}
miner_time(temp)
set.seed(113)
miner_time(sample(c(2,3,5),size=20,replace=TRUE)) # Sample doors
set.seed(113)
sample(c(2,3,5),size=20,replace=TRUE)
miner_time(sample(c(2,3,5),size=20,replace=TRUE))
miner_time(sample(c(2,3,5),size=20,replace=TRUE))
set.seed(113)
do(3)miner_time(sample(c(2,3,5),size=20,replace=TRUE)) # Sample doors
set.seed(113)
do(3)*miner_time(sample(c(2,3,5),size=20,replace=TRUE)) # Sample doors
set.seed(113)
do(3)*miner_time(sample(c(2,3,5),size=20,replace=TRUE)) # Sample doors
set.seed(113)
(do(3)*miner_time(sample(c(2,3,5),size=20,replace=TRUE))) %>%
summarise(Exp=mean(miner_time))
set.seed(113)
(do(100)*miner_time(sample(c(2,3,5),size=20,replace=TRUE))) %>%
summarise(Exp=mean(miner_time))
set.seed(113)
(do(1000)*miner_time(sample(c(2,3,5),size=20,replace=TRUE))) %>%
summarise(Exp=mean(miner_time))
set.seed(113)
(do(10000)*miner_time(sample(c(2,3,5),size=20,replace=TRUE))) %>%
summarise(Exp=mean(miner_time))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(knitr)
library(mosaic)
library(tidyverse)
library(cubature)
library(mosaicCalc)
results <- do(10000)*sqrt(runif(1))
inspect(results)
results %>%
gf_density(~sqrt,xlab="X")
y_results <- results %>%
transmute(y=log(sqrt))
_results %>%
y_results %>%
gf_density(~y,xlab="X")
inspect(y_results)
###Enter R code here
runif(2,5,6)
###Enter R code here
diff(runif(2,5,6))
###Enter R code here
abs(diff(runif(2,5,6)))
###Enter R code here
do(3)*abs(diff(runif(2,5,6)))
###Enter R code here
results <- do(100000)*abs(diff(runif(2,5,6)))
class(results)
results %>%
gf_density(~abs)
results %>%
gf_hist(~abs)
results %>%
gf_histogram(~abs)
inspect(results)
data.frame(results) %>%
summarise(mean(abs<=5))
data.frame(results) %>%
summarise(mean(abs<=5/60))
z_cdf <- function(results,x) {
mean(results<=x)
}
z_cdf(results$abs,5/60)
z_cdf<- Vectorize(z_csf)
z_cdf<- Vectorize(z_cdf)
gf_point(z_cdf(seq(0,1,.1))~seq(0,1,.1))
?gf_point
gf_point(z_cdf(results,eq(0,1,.1))~seq(0,1,.1))
gf_point(z_cdf(results$abs,eq(0,1,.1))~seq(0,1,.1))
gf_point(z_cdf(results$abs,seq(0,1,.1))~seq(0,1,.1))
seq(0,1,.1)
z_cdf(results$abs,seq(0,1,.1))
zcdf(results$abs,x=c(.25,5))
z_cdf(results$abs,x=c(.25,5))
z_cdf <- function(results,x) {
mean(results<=x)
}
zcdf(results$abs,x=c(.25,5))
z_cdf(results$abs,x=c(.25,5))
z_cdf <- function(x) {
mean(results$abs<=x)
}
z_cdf<- Vectorize(z_cdf)
z_cdf <- function(x) {
mean(results$abs<=x)
}
z_cdf<- Vectorize(z_cdf)
z_cdf(results$abs,5/60)
z_cdf(5/60)
gf_point(z_cdf(seq(0,1,.1))~seq(0,1,.1))
gf_point(z_cdf(seq(0,1,.01))~seq(0,1,.01))
gf_line(z_cdf(seq(0,1,.01))~seq(0,1,.01))
gf_line(z_cdf(seq(0,1,.01))~seq(0,1,.01),xlab="Time Difference")
gf_line(z_cdf(seq(0,1,.01))~seq(0,1,.01),xlab="Time Difference",ylab="Probability")
gf_line(z_cdf(seq(0,1,.01))~seq(0,1,.01),xlab="Time Difference",ylab="CDF")
?uniroot
uniroot(z_cdf-.5,c(.25,35))
uniroot(funtion(x)z_cdf(x)-.5,c(.25,35))
uniroot(funtion(x){z_cdf(x)-.5},c(.25,35))
uniroot(funtion(x)(z_cdf(x)-.5),c(.25,35))
uniroot(function(x)(z_cdf(x)-.5),c(.25,35))
uniroot(function(x)z_cdf(x)-.5,c(.25,35))
uniroot(function(x)z_cdf(x)-.5,c(.25,35))$root
.290578*60
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
x<-c(0.2,0.9,1.9,2.2,4.7,5.1)
thetamom<-2*mean(x)
thetamom
simn<-function(n){
y<-replicate(10000,{
x<-runif(n)
(2*mean(x))<max(x)
})
mean(y)
}
t<-seq(10,200,4)
persim<-sapply(t,simn)
plot(t,persim,type="l")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
runif(10,max=5)
check <- function(n=10){
temp<-runif(n,max=5)
2*mean(temp)<max(temp)
}
check(10)
check(10)
set.seed(3030)
check(10)
set.seed(3030)
check(10)
set.seed(3030)
check(10)
set.seed(3030)
check(10)
set.seed(3030)
check(10)
set.seed(3030)
check(10)
library(mosaic)
library(tidyverse)
do(5)*check(10)
(do(5)*check(10)) %>%
summarize(mean(check))
(do(10000)*check(10)) %>%
summarize(mean(check))
(do(10000)*check(10)) %>%
summarize(mean(check)) %>%
pull()
check <- Vectorize(check)
(do(10000)*check(c(10,20))) %>%
summarize(mean(check)) %>%
pull()
do(10)*check(c(10,20))
(do(10)*check(c(10,20)))
(do(10)*check(c(10,20))) %>%
summarise_all(mean)
(do(10)*check(c(10,20))) %>%
summarise_all(mean) %>%
pull(
)
(do(10000)*check(c(10,20))) %>%
summarise_all(mean)
(do(10000)*check(c(10,50,100,500))) %>%
summarise_all(mean)
?summarise_all
(do(10000)*check(c(10,50,100,500))) %>%
summarise_all(mean) %>%
rename(c(10,50,100,500))
(do(10000)*check(c(10,50,100,500))) %>%
summarise_all(mean) %>%
rename(character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean) %>%
rename(character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean,.vars=character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean,vars=character(c(10,50,100,500)))
character(c(10,50,100,500))
as.character(c(10,50,100,500))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean),vars=as.character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean,vars=as.character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean,.vars=as.character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean,.vars=as.character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean,.cols=as.character(c(10,50,100,500)))
(do(10)*check(c(10,50,100,500))) %>%
summarise_all(mean)
(do(1000)*check(c(10,50,100,500))) %>%
summarise_all(mean)
?pivot_longer
(do(1000)*check(c(10,50,100,500))) %>%
summarise_all(mean) %>%
pivot_longer(everything(),names_to = "Sample",values_to = "Percent")
(do(1000)*check(c(10,50,100,500))) %>%
summarise_all(mean) %>%
pivot_longer(everything(),names_to = "Sample",values_to = "Percent") %>%
mutate(Sample=c(10,50,100,500))
simn<-function(n){
y<-replicate(100,{
x<-runif(n)
(2*mean(x))<max(x)
})
mean(y)
}
t<-seq(10,200,4)
persim<-sapply(t,simn)
plot(t,persim,type="l")
simn<-function(n){
y<-replicate(1000,{
x<-runif(n)
(2*mean(x))<max(x)
})
mean(y)
}
t<-seq(10,200,4)
persim<-sapply(t,simn)
plot(t,persim,type="l")
(do(1000)*check(seq(10,200,5))) %>%
summarise_all(mean) %>%
pivot_longer(everything(),names_to = "Sample",values_to = "Percent") %>%
mutate(Sample=seq(10,200,5))
my_data<-(do(1000)*check(seq(10,200,5))) %>%
summarise_all(mean) %>%
pivot_longer(everything(),names_to = "Sample",values_to = "Percent") %>%
mutate(Sample=seq(10,200,5))
my_data
my_data %>%
gf_line(Percent~Sample)
my_data %>%
gf_line(Percent~Sample,xlab="Sample Size")
my_data %>%
gf_line(Percent~Sample,xlab="Sample Size",title="CC")
my_data %>%
gf_line(Percent~Sample,xlab="Sample Size",title="Percent When Estimator is Valid")
?gf_theme
my_data %>%
gf_line(Percent~Sample,xlab="Sample Size",title="Percent When Estimator is Valid") %>%
gf_theme(theme = theme_minimal())
simn<-function(n){
y<-replicate(1000,{
x<-runif(n)
(2*mean(x))<max(x)
})
mean(y)
}
t<-seq(10,200,4)
persim<-sapply(t,simn)
plot(t,persim,type="l")
?rexp
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=1))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=100))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
1/mean(rexp(1000,rate=10))
set.seed(630)
1/mean(rexp(1000,rate=10))
do(10)*1/mean(rexp(1000,rate=10))
do(3)*1/mean(rexp(1000,rate=10))
do(3)*(1/mean(rexp(1000,rate=10)))
do(100)*(1/mean(rexp(1000,rate=10)))
(do(100)*(1/mean(rexp(1000,rate=10)))) %>%
gf_boxplot(~result)
(do(1000)*(1/mean(rexp(1000,rate=10)))) %>%
gf_boxplot(~result)
(do(1000)*(1/mean(rexp(10000,rate=10)))) %>%
gf_boxplot(~result)
(do(1000)*(1/mean(rexp(1000,rate=10)))) %>%
gf_boxplot(~result)
