tidy(m1)
augment(m1)
8.628272 - 7.861402
augment(m1) %>%
filter(pf_expression_control==6.75)
names(m1)
attributes(m1)
m1
c(m1$residuals,m1$fitted.values)
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals") +
theme_bw()
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x="Fitted values",y="Residuals") +
theme_bw()
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x="Fitted values",y="Residuals",title="Residual analysis") +
theme_bw()
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 2) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .2) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .5) +
xlab("Residuals")
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .4) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .4) +
xlab("Residuals") +
theme_bw()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
theme_bw()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
theme_bw() +
geom_abline(slope=1,intercept = 0)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
hfi<-tibble(read_csv("data/hfi.csv"))
dim(hfi)
inspect(hfi[,1:10])
gf_lm(pf_score~pf_expression_control,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
ggplot(hfi,aes(x=pf_expression_control,y=pf_score))+
geom_point(alpha=0.3) +
theme_bw()+
geom_lm(color="black")+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
hfi %>%
summarise(cor(pf_expression_control, pf_score, use = "complete.obs"))
set.seed(4011)
hfi_sub <- hfi %>%
select(pf_expression_control,pf_score,hf_score) %>%
drop_na() %>%
group_by(pf_expression_control) %>%
slice_sample(n=1)
# If you need a function to do this, here it is
plot_ss <- function (x, y, data, showSquares = FALSE, leastSquares = FALSE)
{
x <- eval(substitute(x), data)
y <- eval(substitute(y), data)
plot(y ~ x, asp = 1, pch = 16)
if (leastSquares) {
m1 <- lm(y ~ x)
y.hat <- m1$fit
}
else {
cat("Click two points to make a line.")
pt1 <- locator(1)
points(pt1$x, pt1$y, pch = 4)
pt2 <- locator(1)
points(pt2$x, pt2$y, pch = 4)
pts <- data.frame(x = c(pt1$x, pt2$x), y = c(pt1$y, pt2$y))
m1 <- lm(y ~ x, data = pts)
y.hat <- predict(m1, newdata = data.frame(x))
}
r <- y - y.hat
abline(m1)
oSide <- x - r
LLim <- par()$usr[1]
RLim <- par()$usr[2]
oSide[oSide < LLim | oSide > RLim] <- c(x + r)[oSide < LLim |
oSide > RLim]
n <- length(y.hat)
for (i in 1:n) {
lines(rep(x[i], 2), c(y[i], y.hat[i]), lty = 2, col = "blue")
if (showSquares) {
lines(rep(oSide[i], 2), c(y[i], y.hat[i]), lty = 3,
col = "orange")
lines(c(oSide[i], x[i]), rep(y.hat[i], 2), lty = 3,
col = "orange")
lines(c(oSide[i], x[i]), rep(y[i], 2), lty = 3, col = "orange")
}
}
SS <- round(sum(r^2), 3)
cat("\r                                ")
print(m1)
cat("Sum of Squares: ", SS)
}
plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub)
m1 <- lm(pf_score ~ pf_expression_control, data = hfi_sub)
summary(m1)
m2<-lm(hf_score ~ pf_expression_control, data = hfi_sub)
summary(m2)
ggplot(data = hfi_sub, aes(x = pf_expression_control, y = pf_score)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE,color="black") +
theme_bw()+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
predict(m1,newdata=data.frame(pf_expression_control=6.75))
hfi_sub %>%
filter(pf_expression_control==6.75)
8.628272 - 7.861402
library(broom)
augment(m1) %>%
filter(pf_expression_control==6.75)
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x="Fitted values",y="Residuals",title="Residual analysis") +
theme_bw()
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .4) +
xlab("Residuals") +
theme_bw()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
theme_bw() +
geom_abline(slope=1,intercept = 0)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
gf_lm(pf_association_political_establish~ef_legal_military,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
gf_lm(pf_association_political_operate~ef_legal_military,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
gf_lm(pf_expression_killed~ef_legal_military,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
gf_lm(pf_expression_influence~ef_legal_military,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
gf_lm(pf_expression_influence~pf_score,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
gf_lm(pf_score~pf_expression_influence,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
gf_lm(pf_score~pf_expression_influence,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Control on media",
x="Laws and regulations that influence media content",
y="Personal freedom score")
hfi %>%
summarise(cor(pf_expression_influence, pf_score, use = "complete.obs"))
m2 <- lm(pf_score ~ pf_expression_influence, data = hfi)
summary(m2)
summary(hfi$pf_expression_influence)
predict(m2,newdata=data.frame(pf_expression_influence=6.25))
hfi %>%
filter(pf_expression_influence==6.25)
hfi %>%
filter(pf_expression_influence==6.45)
table(hfi$pf_expression_influence)
predict(m2,newdata=data.frame(pf_expression_influence=6+1/3))
hfi %>%
filter(pf_expression_influence==6+1/3)
predict(m2,newdata=data.frame(pf_expression_influence=6))
hfi %>%
filter(pf_expression_influence==6)
library(broom)
augment(m1) %>%
filter(pf_expression_control==6)
augment(m1) %>%
filter(pf_expression_influence==6)
augment(m2) %>%
filter(pf_expression_influence==6)
augment(m2) %>%
filter(pf_expression_influence==6) %>%
summarize(ave=mean(pf_expression_influence))
augment(m2) %>%
filter(pf_expression_influence==6) %>%
summarize(ave=mean(pf_score))
augment(m2) %>%
filter(pf_expression_influence==6) %>%
summarize(ave=mean(pf_score),n=n())
ggplot(data = m2, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x="Fitted values",y="Residuals",title="Residual analysis") +
theme_bw()
ggplot(data = m2, aes(x = .resid)) +
geom_histogram(binwidth = .4) +
xlab("Residuals") +
theme_bw()
ggplot(data = m2, aes(sample = .resid)) +
stat_qq() +
theme_bw() +
geom_abline(slope=1,intercept = 0)
possum
write_csv(possum,"data/possum.csv")
head(possum)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
possum<-read_csv("data/possum.csv")
head(possum)
possum<- possum %>%
mutate(pop=factor(pop),sex=factor(sex))
glimpse(possume)
glimpse(possum)
possum %>%
gf_point(head_l~total_l) %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_theme(theme_classic())
possum %>%
gf_point( head_l ~ total_l) %>%
gf_lm() %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_theme(theme_classic())
possum %>%
gf_point( head_l ~ total_l) %>%
gf_lm(color="black") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_theme(theme_classic())
possum %>%
gf_point( head_l ~ total_l) %>%
gf_lm(color="black") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_labs(title="Possum data including regression line")
gf_theme(theme_classic())
possum %>%
gf_point( head_l ~ total_l) %>%
gf_lm(color="black") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_labs(x="Total Length (cm)",y="Head Length (mm)") %>%
gf_labs(title="Possum data including regression line") %>%
gf_theme(theme_classic())
possum %>%
#  select(head_l,total_l) %>%
summarise(correlation=cor(head_l,total_l),sd_head=sd(head_l),sd_total=sd(total_l),slope=correlation*sd_head/sd_total)
possum %>%
summarize(correlation=cor(head_l,total_l),sd_head=sd(head_l),
sd_total=sd(total_l),slope=correlation*sd_head/sd_total) %>%
summarize(slope=slope,slope_from_corr=correlation/(sd_head*sd_total))
poss_mod <- lm(head_l~total_l,data=possum)
poss_mod
write_csv(starbucks,"data/starbucks.csv")
sample(1:3)
sample(1:3,1)
sample(c(A,B),replace=TRUE,size=4)
sample(c("A","B"),replace=TRUE,size=4)
set.seed(136)
sample(c("A","B"),replace=TRUE,size=4)
mom<-function(x){2*mean(x)-1}
rolls<-c(2,6,4,3,8,12,1,3)
mom(rolls)
sample(1:6,size=3,replace=TRUE)
sample(1:6,size=3,replace=TRUE)
mom(sample(1:6,size=3,replace=TRUE))
mom(sample(1:6,size=3,replace=TRUE))
mom(sample(1:6,size=3,replace=TRUE))
mom(sample(1:6,size=3,replace=TRUE))
mom(sample(1:6,size=3,replace=TRUE))
mom(sample(1:6,size=2,replace=TRUE))
mom(sample(1:6,size=2,replace=TRUE))
mom(sample(1:6,size=2,replace=TRUE))
results<-do(1000)*mom(sample(1:6,size=2,replace=TRUE))
library(mosaic)
results<-do(1000)*mom(sample(1:6,size=2,replace=TRUE))
head(resutls)
head(results)
mean(results$mom==6)
results<-do(1000)*mom(sample(1:6,size=10,replace=TRUE))
mean(results$mom==6)
results<-do(1000)*mom(sample(1:10,size=10,replace=TRUE))
mean(results$mom==10)
results<-do(1000)*mom(sample(1:6,size=2,replace=TRUE))
6/36
mean(results$mom==10)
mean(results$mom==6)
1/6^4
6^4
sample(1:3,2,replace = TRUE)
sample(1:3,2)
1-(7/8)^26
library(tidyverse)
?starbucks
library(openintro)
?starbucks
glimpse(starbucks)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
glimpse(starbucks)
starbucks <- read_csv("data/starbucks.csv")
glimpse(starbucks)
starbucks <- read_csv("data/starbucks.csv")  %>%
mutate(item=factor(item),type=factor(type))
starbucks <- read_csv("data/starbucks.csv")  %>%
mutate(item=factor(item),type=factor(type))
glimpse(starbucks)
inspect(starbucks)
inspect(starbucks)
starbucks <- read_csv("data/starbucks.csv")  %>%
mutate(type=factor(type))
glimpse(starbucks)
inspect(starbucks)
starbucks %>%
gf_point(calories~carb) %>%
gf_labs(x="Carbohydrates",y="Calories") %>%
gf_theme(theme_classic())
star_mod <- lm(formula = calories ~ carb, data = starbucks)
summary(star_mod)
library(broom)
star_mod <- lm(formula = calories ~ carb, data = starbucks)
summary(star_mod)
glance(star_mod)
augment(star_mod)
tidy(star_mod)
bac
write_csv(bac,"data/bac.csv")
starbucks
new_carb <- data.frame(carb=c(60,70))
predict(star_mod, newdata = new_carb, interval = 'confidence')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
possum<-read_csv("data/possum.csv")
head(possum)
plot(star_mod)
star_mod$residuals
names(star_mod)
augment(star_mod)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(broom)
library(mosaic)
library(tidyverse)
augment(star_mod) %>%
gf_point(.resid~carb)
augment(star_mod) %>%
gf_point(.resid~carb) %>%
gf_hline(yintercept = 0)
augment(star_mod) %>%
gf_point(.resid~carb) %>%
gf_hline(yintercept = 0) %>%
gf_theme(theme_bw())
augment(star_mod) %>%
gf_point(.resid~carb) %>%
gf_hline(yintercept = 0) %>%
gf_theme(theme_bw()) %>%
gf_labs(title="Residual plot",x="Carbohydrates",y="Residual")
augment(star_mod) %>%
gf_point(.resid~carb) %>%
gf_hline(yintercept = 0) %>%
gf_theme(theme_bw()) %>%
gf_labs(title="Residual plot",x="Carbohydrates",y="Residual")
?augment
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
bac <- read_csv("data/bac.csv")
bac %>%
gf_point(bac~beers) %>%
gf_labs(x="Number of cans of beer",y="BAC") %>%
gf_theme(theme_classic()) %>%
gf_refine(scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9)))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
library(broom)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
tidy(star_mod)
tidy(star_mod) %>%
filter(term=="carb") %>%
mutate(test_stat=(estimate-0)/std.err)
tidy(star_mod) %>%
filter(term=="carb")
tidy(star_mod) %>%
filter(term=="carb") %>%
mutate(test_stat=(estimate-0)/std.error)
tidy(star_mod) %>%
filter(term=="carb") %>%
mutate(test_stat=(estimate-0)/std.error,p_value=2*pt(test_stat,lower.tail = FALSE))
tidy(star_mod) %>%
filter(term=="carb") %>%
mutate(test_stat=(estimate-0)/std.error,p_value=2*pt(test_stat,df=73,lower.tail = FALSE))
tidy(star_mod) %>%
filter(term=="carb") %>%
summarize(test_stat=(estimate-0)/std.error,p_value=2*pt(test_stat,df=73,lower.tail = FALSE))
predict(star_mod, newdata = new_carb, level=0.9 interval = 'prediction')
predict(star_mod, newdata = new_carb, level=0.9, interval = 'prediction')
new_carb <- data.frame(carb=c(60,70))
predict(star_mod, newdata = new_carb, interval = 'prediction')
augment(star_mod,newdata=new_carb)
glance(star_mod)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
confint(bac_mod,level=0.9)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
starbucks <- read_csv("data/starbucks.csv")
starbucks <- read_csv("data/starbucks.csv")
star_mod <- lm(calories~carb,data=starbucks)
summary(star_mod)
names(summary(star_mod))
summary(star_mod)$sigma
summary(star_mod)$r.squared
starbucks %>%
summarize(correlation=cor(carb,calories),correlation_squared=correlation^2)
summary(star_mod)$fstatistic
plot(star_mod,which = 1)
plot(star_mod,2)
plot(star_mod,which=3)
plot(star_mod,5)
plot(star_mod,which=3)
plot(star_mod,5)
