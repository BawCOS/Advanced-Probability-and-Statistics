summarize(prob=n()/1000)
class(data.frame(results))
knitr::opts_chunk$set(echo = TRUE)
library(prob)
library(mosaic)
library(tidyverse)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
data.frame(results) %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
View(results)
results %>%
gf_bar(~heads)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
results <- do(10000)*rflip(3)
head(results)
results %>%
gf_bar(~heads)
library(tidyverse)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
knitr::opts_chunk$set(echo = TRUE)
library(prob)
library(mosaic)
library(tidyverse)
set.seed(18)
rflip(2)
set.seed(73)
rflip(3)
results <- do(10000)*rflip(3)
head(results)
results %>%
gf_bar(~heads)
results %>%
filter(heads==2) %>%
summarize(prob=n()/1000)
library(prob)
## Define the sample space
S <- cards(makespace = T)
## Define event A
A <- subset(S, suit == "Club")
nrow(A) / nrow(S)
Prob(A)
## Define event B
B <- subset(S, rank %in% c(10, "J", "Q", "K", "A"))
Prob(B)
## Determine the union of A and B
unionAB <- union(A, B)
Prob(unionAB)
## Determine the intersect of A and B
intAB <- intersect(A, B)
Prob(intAB)
## Determine the complement of B
Bcomp <- setdiff(S, B)
Prob(Bcomp)
## Find outcomes in B but not in A
BnotA <- setdiff(B, A)
Prob(BnotA)
results %>%
filter(heads==2) %>%
summarize(prob=n()/10000)
write_csv(S,"Cards.csv")
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
Cards <- read_csv("data/Cards.csv")
Cards <- read_csv("data/Cards.csv")
head(Cards)
1/52
Cards <- read_csv("data/Cards.csv")
inspect(Cards)
Cards %>%
filter(suit == "Club")
Cards %>%
filter(suit == "Club") %>%
select(rank,suit)
?deal
deal(Cards,1)
do(3)*deal(Cards,1)
sample(Cards,1)
results <- do(1000)*sample(Cards,1)
head(results)
length(results)
results
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/1000)
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/10000)
results <- do(10000)*sample(Cards,1)
head(results)
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/10000)
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A")) %>%
select(rank,suit)
results %>%
filter(rank %in% c(10, "J", "Q", "K", "A")) %>%
summarize(prob=n()/10000)
20/53
results %>%
mutate(size=n())
results %>%
summarize(size=n())
results %>%
mutate(face=rank %in% c(10, "J", "Q", "K", "A"))
results %>%
mutate(face=rank %in% c(10, "J", "Q", "K", "A"))%>%
summarize(prob=mean(face))
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A"),suit=="Club")
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A"),suit=="Club") %>%
select(rank,suit)
results %>%
mutate(face=(rank %in% c(10, "J", "Q", "K", "A"))&(suit=="Club"))%>%
summarize(prob=mean(face))
5/52
sample(Cards,5)
do(2)*sample(Cards,5)
sample(Cards,5)$suit
identical(sample(Cards,5)$suit)
all.equal(sample(Cards,5)$suit)
unique(sample(Cards,5)$suit)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
num<-choose(13,1)*choose(4,3)*choose(12,1)*choose(4,2)
denom<-choose(52,5)
num/denom
1-364^20/365^20
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
n<-1:80
prob<-sapply(n, function(x) 1-prod(364^x))/(365^x))
n<-1:80
mybday<-function(x) 1-364^x/365^x
mybday <- Vectorize(mybday)
n<-1:80
mybday<-function(x) 1-364^x/365^x
mybday <- Vectorize(mybday)
mybday(20)
gf_line(mybday(1:80)~ seq(1,80),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 1 person matching my birthday")
gf_line(mybday(n)~ n,
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 1 person matching my birthday")
prob <- mybday(1:300)
n<-1:300
n[prob>.5]
prob>.5
mybday(120)
mybday(200)
mybday(150)
n<-1:80
mybday<-function(x) 1-(364/365)^x
mybday <- Vectorize(mybday)
mybday(150)
mybday(200)
prob <- mybday(1:300)
n<-1:300
prob <- mybday(1:300)
n<-1:300
n[prob >= .5][1]
which(prob>=.5)
prob <- mybday(1:300)
n<-1:300
which(prob>= .5)
30*10/(6^5)
?rflips
library(mosaic)
?rflip
1/10000
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
set.seed(43)
rflip(1000000,0.001)
set.seed(43)
rflip(10000,0.001)
set.seed(43)
rflip(10000,0.001,summarize = TRUE)
set.seed(43)
rflip(100000,0.001,summarize = TRUE)
set.seed(43)
rflip(1000000,0.001,summarize = TRUE)
set.seed(43)
results <- rflip(1000000,0.001,summarize = TRUE)
results
results['tails']
rflip(results['tails'],.001,summarize = TRUE)
rflip(results['tails'],prob=.001,summarize = TRUE)
results['tails']
class(results['tails'])
as.numeric(results['tails'])
rflip(as.numeric(results['tails']),prob=.001,summarize = TRUE)
set.seed(43)
results <- rflip(1000000,0.0001,summarize = TRUE)
results
rflip(as.numeric(results['tails']),prob=.001,summarize = TRUE)
100/(100+959)
.8^3
1/8
.125*.5/(.125*.5+.8^3*.5)
rflip(3)
do(10)*rflip(3)
knitr::opts_chunk$set(echo = TRUE)
library(prob)
set.seed(501)
rflip(1000,summarize = TRUE)
set.seed(501)
results <- rflip(1000000,summarize = TRUE)
results
do(500717)*rflip(3) %>%
filter(heads==3) %>%
summarise(count=n())
(do(500717)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n())
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n())
do(4)*rflip(3)
(do(4)*rflip(3)) %>%
filter(heads==1)
library(tidyverse)
(do(4)*rflip(3)) %>%
filter(heads==1)
class(do(4)*rflip(3))
names(do(4)*rflip(3))
data.frame(do(4)*rflip(3)) %>%
filter(heads==1)
do(4)*rflip(3) %>%
data.frame() %>%
filter(heads==1)
class(do(4)*rflip(3))
data.frame(do(4)*rflip(3))
class(data.frame(do(4)*rflip(3)))
library(tidyverse)
data.frame(do(4)*rflip(3)) %>%
filter(heads==1)
results <-data.frame(do(4)*rflip(3))
results
results %>%
filter(heads==1)
names(results)
colnames(results)
names(Births)
Births %>%
filter(year == 1969) %>%
gf_point(births~day_of_year)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
data.frame(do(4)*rflip(3)) %>%
filter(heads==1)
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n())
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3)) %>%
filter(heads==3,prob=.8) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
6270/(6270+25512)
.125*.5/(.125*.5+.8^3*.5)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
pmf <- c(1/8,3/8,3/8,1/8)
pmf
cumsum(pmf)
cdf <- cumsum(pmf)
cdf
random
runif()
runif(1)
temp <- runif(1)
temp
temp < cdf
which(temp < cdf)
which(temp < cdf)[1]
set.seed(1153)
ran_num <- runif(1)
ran_num
pmf <- c(1/8,3/8,3/8,1/8)
names(pmf) <- c(0,1,2,3)
pmf
cdf <- cumsum(pmf)
cdf
ran_num < cdf
which(ran_num < cdf)
which(ran_num < cdf)[1]
names(cdf)[which(ran_num < cdf)[1]]
pmf <- c(1/8,3/8,3/8,1/8)
values <- c(0,1,2,3)
pmf
cdf <- cumsum(pmf)
cdf
values[which(ran_num < cdf)[1]]
ran_num
ran_num <- runif(1)
ran_num <- runif(2)
ran_num
ran_num < cdf
?Vectorize
simple_rv <- function(value,cdf){
ran_num <- runif(1)
return(values[which(ran_num < cdf)[1]])
}
simple_rv <- function(values,cdf){
ran_num <- runif(1)
return(values[which(ran_num < cdf)[1]])
}
simple_rv(values,cdf)
simple_rv(values,cdf)
simple_rv(values,cdf)
simple_rv(values,cdf)
simple_rv(values,cdf)
do(3)*simple_rv(values,cdf)
do(3)*simple_rv(values,cdf)
do(3)*simple_rv(values,cdf)
results <- do(1000)*simple_rv(values,cdf)
inspect(results)
results
head(results)
tally(~simple_rv,data=results)
tally(~simple_rv,data=results,format="proportion")
results <- do(10000)*simple_rv(values,cdf)
inspect(results)
tally(~simple_rv,data=results,format="proportion")
3/8
1/8
mean(~simple_rv,data=results
mean(~simple_rv,data=results)
?variance
?var
var(~simplr_rv,data=results)
var(~simple_rv,data=results)
var(~simple_rv,data=results)*(10000-1)/10000
rflip(1)
which(rbinom(100, 1, .2) == 1
)
which(rbinom(100, 1, .2) == 1)[1]
which(rbinom(100, 1, .2) == 1)[1]
which(rbinom(100, 1, .2) == 1)[1]
rflip(10)
?rflip
do(2)*rflip(100)
rflip(10,quiet = TRUE)
temp<-rflip(10,quiet = TRUE)
temp
temp
rm(temp)
names(rflip(10))
rflip(10)
rflip(10)=="H"
rflip
rflip(10)$sequence
rflip
atrr(rflip(10),sequence)
attr(rflip(10),sequence)
attr(rflip(10),"sequence")
class(rflip(3))
temp<-attr(rflip(10),"sequence")
temp
which(temp=='H')
which(temp=='H')[1]
sample(c("H","T",10,replace=TRUE))
sample(c("H","T"),10,replace=TRUE))
sample(c("H","T"),10,replace=TRUE)
.5^1000
set.seed(68)
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
set.seed(68)
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
knitr::opts_chunk$set(echo = TRUE)
library(prob)
do(3)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
do(3)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
do(3)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
results <- do(1000)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
mean(~result,data=results)
set.seed(68)
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
results <- do(10000)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
mean(~result,data=results)
results %>%
gf_bar(~result)
results %>%
gf_props(~result)
tally(~result,data=results,format="proportion")
tally(~result,data=results,format="percent")
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
set.seed(102)
results <- do(10000)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[5]
mean(~result,data=results)
tally(~result,data=results,format="percent")
tinytex::tlmgr_install("multirow")
tinytex::tlmgr_install("multicolumn")
tinytex::tlmgr_search("/multirow.sty")
set.seed(9)
sim.diffs<-do(10)*abs(diff(sample(1:6,2,replace=T)))
sim.diffs
set.seed(9)
sim_diffs<-do(10)*abs(diff(sample(1:6,2,replace=T)))
tally(~abs,data=sim_diffs)
set.seed(9)
sim_diffs<-do(10000)*abs(diff(sample(1:6,2,replace=T)))
tally(~abs,data=sim_diffs,format="proportion")
mean(~abs,data=sim.diffs)
mean(~abs,data=sim_diffs)
var(sim_diffs)*9999/10000
true_mean<-sum(c(6,10,8,6,4,2)/36*c(0,1,2,3,4,5))
true_mean
sum(c(6,10,8,6,4,2)/36*(c(0,1,2,3,4,5)-true_mean)^2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
integrate(x^2,0,1)
integrate(function(x)x^2,0,1)
integrate(function(x)2*x,0,1)
integrate(function(x2*x,.1,.75))
integrate(function(x)2*x,.1,.75)
uniroot(function(x)x^2-.5)
uniroot(function(x)x^2-.5,c(0,1))
uniroot(function(x)x^2-.5,c(0,1))$root
sqrt(runif(1))
results <- do(3)*sqrt(runif(1))
results
results <- do(10000)*sqrt(runif(1))
inspect(results)
results %>%
gf_density(~sqrt)
results %>%
gf_density(~sqrt,x="X")
results %>%
gf_density(~sqrt,xlab="X")
integrate(function(x)x*2*x,0,1)
mean(~sqrt,data=results)
integrate(function(x)x^2*2*x,0,1)
integrate(function(x)x^2*2*x,0,1) -(2/3)^2
integrate(function(x)x^2*2*x,0,1)
integrate(function(x)x^2*2*x,0,1)$value
integrate(function(x)x^2*2*x,0,1)$value-(2/3)^2
var(~sqrt,data=results)
var(~sqrt,data=results)*9999/10000
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
uniroot(function(y)integrate(function(x)x^2/18,-y,y),c(-5,5))
integrate(function(y)y^2/18,-2,2)
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)
my_pdf(2)
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
my_pdf(2)
my_pdf(2:3)
my_pdf<-Vectorize(my_pdf)
my_pdf(2:3)
uniroot(my_pdf,c(-10,10))
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
uniroot(my_pdf,c(-10,10))
uniroot(my_pdf-1,c(-10,10))
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
my_pdf<-Vectorize(my_pdf)
domain <- seq(.01,5,.1)
my_pdf(domain)
domain <- seq(.01,5,.1)
gf_point(my_pdf(domain)~domain)
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain)
uniroot(function(x)my_pdf(x)-1,c(-10,10))
uniroot(function(x)my_pdf(x)-1,c(-10,10))$root
