group_by(homeownership) %>%
slice_sample(n=100) %>%
ungroup()
#  mutate(num_rows=n())
head(temp)
tally(~homeownership,temp)
temp <- loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
slice_sample(prop=0.01) %>%
ungroup()
#  mutate(num_rows=n())
tally(~homeownership,loan)
tally(~homeownership,temp)
tally(~homeownership,loans_full_schema)
tally(~homeownership,temp,format = "proportion")
tally(~homeownership,loans_full_schema,format = "proportion")
library(openintro)
str(loans_full_schema)
dim(loans_full_schema)
tally(~homeownership,data=loans_full_schema)
tally(~homeownership,data=loans_full_schema,format="proportion")
loans100 <- loans_full_schema %>%
select(interest_rate,homeownership) %>%
droplevels() %>%
group_by(homeownership) %>%
slice_sample(prop=0.01) %>%
ungroup()
tally(~homeownership,data=loans100,format="proportion")
loans100 %>%
gf_boxplot(interest_rate~homeownership)
loans100 %>%
gf_boxplot(interest_rate~homeownership) %>%
gf_theme(theme_classic())
str(loans100)
loan_mod<-lm(interes_rate ~ homeownership,data=loans100)
loan_mod<-lm(interest_rate ~ homeownership,data=loans100)
summary(loan_mod)
loans100 %>%
filter(homeownership == "MORTGAGE") %>%
summarise(average=mean(homeownership))
loans100 %>%
filter(homeownership == "MORTGAGE")
loans100 %>%
filter(homeownership == "MORTGAGE") %>%
summarise(average=mean(interest_rate))
loans100 %>%
group_by(homeownership) %>%
summarise(average=mean(interest_rate))
anova(loan_mod)
TukeyHSD(aov(interest_rate~homeownership, data=loans100))
plot(loan_mod)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
set.seed(532)
results <- do(1000)*lm(interest_rate ~ homeownership,data=resample(loans100))
head(results)
cdata(~carb,data=results_resid)
results_resid <- do(1000) * lm( calories~carb, data = resample(star_mod)) # resampled residuals
results_resid %>%
gf_histogram(~carb) %>%
gf_vline(xintercept = obs$carb,color="red") %>%
gf_theme(theme_classic())
cdata(~carb,data=results_resid)
obs<-do(1)*loan_mod
obs
results %>%
gf_histogram(~homeownershipOWN) %>%
gf_vline(xintercept = obs$homeownershipOWN,color="red") %>%
gf_theme(theme_classic())
cdata(~homeownershipOWN,data=results)
confint(loan_mod)
results %>%
mutate(own_rent=homeownershipOWN - homeownershipRENT)
results %>%
mutate(own_rent=homeownershipOWN - homeownershipRENT) %>%
cdata(~own_rent,data=.)
plot(loan_mod,2)
plot(loan_mod,3)
loans100 %>%
group_by(homeownership) %>%
summarise(average=mean(interest_rate),std_dev=sd(interest_rate))
plot(loan_mod,5)
gpa_study_hours
str(loans_full_schema)
tally(~term,loans_full_schema)
tally(~application_type,loans_full_schema)
unique(loans_full_schema$application_type)
summary(loans_full_schema)
unique(loans_full_schema$application_type)
unique(loans_full_schema$initial_listing_status)
head(mariokart)
head(mariokart)
mario_mod <- lm(total_pr~cond,data=mariokart)
summary(mario_mod)
mariokart %>%
gf_point(total_pr~cond) %>%
gr_lm() %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_lm() %>%
gf_theme(theme_classic())
gf_lm
?gf_lm
mariokart %>%
gf_point() %>%
gf_lm(total_pr~cond) %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_lm(total_pr~cond) %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_lm(stat="lm") %>%
gf_theme(theme_classic())
?gf_lm
mariokart %<%
group_by(cond) %>%
summarize(xbar=mean(total_pr), stand_dev=sd(total_pr))
mariokart %>%
group_by(cond) %>%
summarize(xbar=mean(total_pr), stand_dev=sd(total_pr))
mariokart %>%
gf_point(total_pr~as.numeric(cond)) %>%
gf_lm() %>%
gf_theme(theme_classic())
mariokart %>%
gf_point(total_pr~cond) %>%
gf_theme(theme_classic())
mariokart %>%
filter(total_pr > 100)
mariokart_new <- mariokart %>%
filter(total_pr <= 100) %>%
select(total_pr,cond,stock_photo,duration,wheels)
mario_mod2 <- lm(total_pr~cond,data=mariokart_new)
summary(mario_mod2)
mariokart_new %>%
gf_point(total_pr~cond) %>%
gf_theme(theme_classic())
summary(mariokart_new)
mariokart_new %>%
gf_boxplot(total_pr~cond) %>%
gf_theme(theme_classic())
plot(mario_mod2,2)
plot(mario_mod2,3)
plot(mario_mod2,5)
dim(mariokart_new)
mario_mod_multi <- lm(total_pr~., data=mariokart_new)
summary(mario_mod_multi)
mario_mod_multi$residuals[1]
library(broom)
tidy(mario_mod_multi)
augment(mario_mod_multi)
augment(mario_mod_multi)[1]
augment(mario_mod_multi)
augment(mario_mod_multi) %>%
head(1)
augment(mario_mod_multi) %>%
head(1)
4.901^2
names(mario_mod_multi)
names(summary(mario_mod_multi))
tidy(mario_mod_multi)
summary(mario_mod_multi)$sigma
(summary(mario_mod_multi)$sigma)^2
mariokart_new %>%
summarise(total_var=var(total_pr))
1-24.0237/83.05864
summary(mario_mod_multi)$r.squared
augment(mario_mod_multi)
augment(mario_mod_multi) %>%
summarise(var_resid=var(.resid))
1-23.34/83.05864
summary(mario_mod_multi)$r.squared
names(summary(mario_mod_multi))
summary(mario_mod_multi)$adj.r.squared
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
head(eamil)
head(email)
library(openintro)
data(COL)
p  <- seq(0.0001, 0.9999, 0.0002)
lp <- log(p/(1-p))
pts  <- seq(0.01, 0.99, length.out=25)
R    <- c(-6,6)
adj  <- 0.07
adj1 <- 0.02
plot(lp, p, ylab="", xlab=expression(logit(p[i])), xlim=c(-5.8, 6.5), ylim=c(-0.05, 1.1), type="n")
lines(lp, p, type="l", col=COL[5], lwd=1.5)
mtext(expression(p[i]), 2, 2.4)
abline(h=0:1, lty=2, col=COL[1], lwd=1.5)
this <- which.min(abs(p-0.2))
#lines(rep(p[this], 2), c(-50, lp[this]), col="#00000044")#, lty=3, lwd=2)
#lines(c(-1, p[this]), rep(lp[this], 2), col="#00000044")#, lty=3, lwd=2)
LP    <- c(seq(6, -5, -1)) #log(P/(1-P))
P     <- exp(LP)/(1+exp(LP))#1-c(0.01, 0.05, 0.1, 0.20, 0.3, 0.4, 0.5)
POS   <- c(3, 1, 3, 1, 2, 2, 2, 2, 4, 3, 1, 3)
xOFF  <- c()
Round <- c(3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3)
for(i in 1:length(LP)){
points(LP[i], P[i], col=COL[4], lwd=2)
t1   <- format(round(c(LP,0.9), Round[i]))[i]
t2   <- format(round(P, Round[i]))[i]
temp <- paste("(", t1, ", ", t2, ")", sep="")
text(LP[i], P[i], temp, cex=0.6, pos=POS[i], col=COL[5])
}
#points(lp[this], p[this])
#text(lp[this], p[this], "(-1.39, 0.20)", cex=0.7, pos=4)
# plot(R, c(-0.4, 2.4), type="n", xlab="", ylab="", axes=FALSE)
# lines(0:1, c(2,2))
# segments(0:1, 2-adj, 0:1, 2+adj)
# text(0:1, 2+adj1, 0:1,pos=3)
# text(0.5, 2.1, expression(p[i]), pos=3)
# #arrows(0, 1, R[2], 1, length=0.08)
# #segments(0:(R[2]-1), 1-adj, 0:(R[2]-1), 1+adj)
# pts1 <- pts/(1-pts)
# #segments(pts, 2, pts1, 1)
# arrows(R[1], 0, R[2], 0, length=0.08, code=3)
# segments((R[1]+1):(R[2]-1), -adj, (R[1]+1):(R[2]-1), adj)
# pts2 <- log(pts1)
# arrows(pts, 2, pts2, 0, length=0.05)
# text((R[1]+1):(R[2]-1), rep(-adj1, R[2]-R[1]-2), (R[1]+1):(R[2]-1), pos=1, cex=0.8)
# text(-4, 1, expression(logit(p[i])))
# #abline(h=0:1)
dev.off()
library(openintro)
data(COL)
p  <- seq(0.0001, 0.9999, 0.0002)
lp <- log(p/(1-p))
pts  <- seq(0.01, 0.99, length.out=25)
R    <- c(-6,6)
adj  <- 0.07
adj1 <- 0.02
plot(lp, p, ylab="", xlab=expression(logit(p[i])), xlim=c(-5.8, 6.5), ylim=c(-0.05, 1.1), type="n")
lines(lp, p, type="l", col=COL[5], lwd=1.5)
mtext(expression(p[i]), 2, 2.4)
abline(h=0:1, lty=2, col=COL[1], lwd=1.5)
this <- which.min(abs(p-0.2))
#lines(rep(p[this], 2), c(-50, lp[this]), col="#00000044")#, lty=3, lwd=2)
#lines(c(-1, p[this]), rep(lp[this], 2), col="#00000044")#, lty=3, lwd=2)
LP    <- c(seq(6, -5, -1)) #log(P/(1-P))
P     <- exp(LP)/(1+exp(LP))#1-c(0.01, 0.05, 0.1, 0.20, 0.3, 0.4, 0.5)
POS   <- c(3, 1, 3, 1, 2, 2, 2, 2, 4, 3, 1, 3)
xOFF  <- c()
Round <- c(3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3)
for(i in 1:length(LP)){
points(LP[i], P[i], col=COL[4], lwd=2)
t1   <- format(round(c(LP,0.9), Round[i]))[i]
t2   <- format(round(P, Round[i]))[i]
temp <- paste("(", t1, ", ", t2, ")", sep="")
text(LP[i], P[i], temp, cex=0.6, pos=POS[i], col=COL[5])
}
#points(lp[this], p[this])
#text(lp[this], p[this], "(-1.39, 0.20)", cex=0.7, pos=4)
# plot(R, c(-0.4, 2.4), type="n", xlab="", ylab="", axes=FALSE)
# lines(0:1, c(2,2))
# segments(0:1, 2-adj, 0:1, 2+adj)
# text(0:1, 2+adj1, 0:1,pos=3)
# text(0.5, 2.1, expression(p[i]), pos=3)
# #arrows(0, 1, R[2], 1, length=0.08)
# #segments(0:(R[2]-1), 1-adj, 0:(R[2]-1), 1+adj)
# pts1 <- pts/(1-pts)
# #segments(pts, 2, pts1, 1)
# arrows(R[1], 0, R[2], 0, length=0.08, code=3)
# segments((R[1]+1):(R[2]-1), -adj, (R[1]+1):(R[2]-1), adj)
# pts2 <- log(pts1)
# arrows(pts, 2, pts2, 0, length=0.05)
# text((R[1]+1):(R[2]-1), rep(-adj1, R[2]-R[1]-2), (R[1]+1):(R[2]-1), pos=1, cex=0.8)
# text(-4, 1, expression(logit(p[i])))
# #abline(h=0:1)
?glm
email %>%
select(spam,to_multiple) %>%
summary()
email_mod <- glm(spam~to_multiple,data=email,family="binomial")
summary(email_mod)
email_mod2 <- glm(spam~.,data=email,family="binomial")
summary(email_mod2)
email_sub<-email %>%
select(spam,to_multiple,cc,attach,dollar,winner,inherit,password,format,re_subj,exclaim_subj)
email_mod2 <- glm(spam~.,data=email_sub,family="binomial")
summary(email_mod2)
str(email_sub)
update.lm
email_mod2 <- glm(spam~to_multiple+cc+attach+dollar+winner+inherit+password+format+re_subj,
data=email_sub,family="binomial")
summary(email_mod2)
email_mod2 <- glm(spam~to_multiple+attach+dollar+winner+inherit+password+format+re_subj,
data=email_sub,family="binomial")
summary(email_mod2)
summary(email_mod)
summary(email_mod2)
dim(email_sub)
augment(email_mod2)
library(broom)
augment(email_mod2)
augment(email_mod2) %>%
gf_point(spam~.hat)
augment(email_mod2) %>%
gf_point(spam~.hat,alpha=.2)
noise <- rnorm(3921, sd=0.08)
augment(email_mod2) %>%
gf_point(spam~.hat+noise,alpha=.2)
augment(email_mod2) %>%
gf_point(spam~(.hat+noise),alpha=.2)
augment(email_mod2) %>%
gf_point((spam+noise)~.hat,alpha=.2)
augment(email_mod2)
augment(email_mod2) %>%
summarise(max_hat=max(.hat))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
possum
glimpse(possum)
?possum
mosiac::do
mosaic::do
do(1)*email_mod
email_mod
do(2)*email_mod
do(1)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
do(1)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
do(1)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
do(1)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
email_mod2
library(broom)
augment(email_mod)
do(1)*email_mod
summary(email_mod)
do(1)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
set.seed(5011)
results <- do(20)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
head(results)
set.seed(5011)
results <- do(1000)*glm(formula = spam ~ to_multiple, family = "binomial", data = resample(email))
head(results)
results %>%
gf_histogram(~to_multiple)
cdata(~to_multiple,results)
?cdata
cdata(~to_multiple,data=results)
?email
results_pred <- results %>%
mutate(pred=1/(1+exp(Intercept+to_multiple)))
cdata(~pred,data=results)
cdata(~pred,data=results_pred)
tally(~spam,data=email)
results_pred <- results %>%
mutate(pred=1/(1+exp(Intercept)))
cdata(~pred,data=results_pred)
cdata(~pred,data=results_pred)
results_pred <- results %>%
mutate(pred=1/(1+exp(Intercept+to_multiple)))
cdata(~pred,data=results_pred)
email_mod2
summary(email_mod2)
do(1)*glm(formula = spam ~ to_multiple + attach + dollar + winner +
inherit + password + format + re_subj, family = "binomial",
data = email_sub)
set.seed(54321)
results <-do(1000)*glm(formula = spam ~ to_multiple + attach + dollar + winner +
inherit + password + format + re_subj, family = "binomial",
data = resample(email_sub))
head(results)
results %>%
gf_histogram(~inherit)
cdata(~inherit,data=results)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
mariokart
mario_mod_multi
unique(mariokart$duration)
unique(mariokart$wheels)
mario_mod3 <- lm(total_pr~cond+duration,data=mariokart_new)
summary(mario_mod3)
mario_mod_multi
summary(mario_mod_multi)
unique(mariokart$wheels)
mario_mod3 <- lm(total_pr~cond+wheels,data=mariokart_new)
summary(mario_mod3)
mariokart_new %>%
gf_point(total_pr~duration)
gf_point(total_pr~wheels)
mariokart_new %>%
gf_point(total_pr~wheels)
Carseats
mariokart_new %>%
gf_point(total_pr~duration)
install.packages("ISLR")
library(ISLR)
glimpse(Carseats)
carseat_mod1<-lm(Sales~Price+Advertising+Urban,data=Carseats)
summary(carseat_mod1)
carseat_mod1<-lm(Sales~Price+Advertising+US,data=Carseats)
summary(carseat_mod1)
carseat_mod1<-lm(Sales~Price+Urban,data=Carseats)
summary(carseat_mod1)
Carseats %>%
gf_point(Sales~Price) %>%
gf_lm(Sales~Price|Urban)
Carseats %>%
gf_point(Sales~Price) %>%
gf_lm(Sales~Price, color=Urban)
Carseats %>%
gf_point(Sales~Price,color=Urban)
Carseats %>%
gf_point(Sales~Price,color=~Urban)
Carseats %>%
gf_point(Sales~Price,color=~Urban) %>%
gf_lm(Sales~Price,color=~Urban)
library(broom)
augment(carseat_mod1)
augment(carseat_mod1) %>%
gf_point(Sales~Price)
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price)
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price|Urban)
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price,groups=Urban)
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price,groups=~Urban)
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price,group=~Urban)
?gf_line
Carseats
head(Carseats)
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price,data=subset(augment(carseat_mod1), Urban == "Yes"))
augment(carseat_mod1) %>%
gf_point(Sales~Price) %>%
gf_line(.fitted~Price,data=subset(augment(carseat_mod1), Urban == "Yes"))%>%
gf_line(.fitted~Price,data=subset(augment(carseat_mod1), Urban == "No"))
glimpse(Credit)
dim(Credit)
credit_mod1<-lm(Balance~Income+Student,data=Carseats)
credit_mod1<-lm(Balance~Income+Student,data=Credit)
summary(credit_mod1)
augment(credit_mod1) %>%
gf_point(Balance~Income) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"))%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"))
augment(credit_mod1) %>%
gf_point(Balance~Income) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"))%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color="blue")
augment(credit_mod1) %>%
gf_point(Balance~Income) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color="yellow")%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color="blue")
augment(credit_mod1) %>%
gf_point(Balance~Income) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color="red")%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color="blue")
augment(credit_mod1) %>%
gf_point(Balance~Income,color=~Student) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color="red")%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color="blue")
augment(credit_mod1) %>%
gf_point(Balance~Income,color=~Student) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color="red",color=~Student)%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color="blue")
augment(credit_mod1) %>%
gf_point(Balance~Income,color=~Student) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color=~Student)%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color="blue")
augment(credit_mod1) %>%
gf_point(Balance~Income,color=~Student) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color=~Student)%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color=~Student)
credit_mod2<-lm(Balance~Income:Student,data=Credit)
summary(credit_mod2)
augment(credit_mod2) %>%
gf_point(Balance~Income,color=~Student) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color=~Student)%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color=~Student)
credit_mod2<-lm(Balance~Income*Student,data=Credit)
summary(credit_mod2)
augment(credit_mod2) %>%
gf_point(Balance~Income,color=~Student) %>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "Yes"),color=~Student)%>%
gf_line(.fitted~Income,data=subset(augment(credit_mod1), Student == "No"),color=~Student)
