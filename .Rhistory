text(x, y+1.98, k, cex=0.45, pos=3, col=COL[1+3*(pch[k]==1)])
}
}
trmt  <- rep(NA, n)
these <- which(pch == 1)
trmt[sample(these, length(these)/2)] <- "ctrl"
trmt[is.na(trmt) & pch == 1] <- "trmt"
k <- 0
x <- 0.078
y <- 1.83
for(i in these){
k <- k+1
points(x, y, pch=pch[i], cex=cex[i], col=COL[4])
text(x, y-0.02, i, cex=0.45, pos=3, col=COL[4])
if(y < 1.3){
x <- x + 0.095
y <- 1.83
} else {
y <- y - 0.11
}
}
these <- which(pch != 1)
trmt[sample(these, length(these)/2)] <- "ctrl"
trmt[is.na(trmt) & pch != 1] <- "trmt"
k <- 0
x <- 0.615
y <- 1.82
for(i in these){
k <- k+1
points(x, y, pch=pch[i], cex=cex[i], col=COL[1])
text(x, y-0.02, i, cex=0.45, pos=3, col=COL[1])
if(y < 1.3){
x <- x + 0.08
y <- 1.83
} else {
y <- y - 0.095
}
}
#=====> Low Risk <=====#
k <- rep(0,4)
x <- c(0.10, 0.10, 0.665, 0.665)
y <- c(0.35, 0.83, 0.35, 0.83)-0.03
for(i in 1:n){
j <- 1
if(trmt[i] == "trmt"){
j <- j+1
}
if(pch[i] != 1){
j <- j+2
}
k[j] <- k[j]+1
points(x[j], y[j], pch=pch[i], cex=cex[i], col=COL[1+3*(pch[i] == 1)])
text(x[j], y[j]-0.02, i, cex=0.45, pos=3, col=COL[1+3*(pch[i] == 1)])
if(y[j] < 0.12 + 0.51*(j %in% c(2,4)) - 0.03){
x[j] <- x[j] + 0.11 - 0.025*(j > 2)
y[j] <- 0.35 + 0.48*(j %in% c(2,4)) - 0.03
} else {
y[j] <- y[j] - 0.085
}
#Sys.sleep(0.3)
}
names(county_M377)
pch <- 1
cex <- sqrt(county$pop2010/1e6)
pch <- 1
cex <- sqrt(county_M377$pop2010/1e6)
colPop <- fadeColor(ifelse(cex > 0.35, COL[4], COL[1]), substr(gray(0.6+cex*0.1),2,3))
library(tidyverse)
library(mosaic)
library(openintro)
plot(c(-0.05,1.2),c(0.39,1),type='n',axes=FALSE,xlab ="",ylab="")
text(0.59, 0.89, 'sun exposure',cex=.8)
rect(0.4,0.8,0.78,1)
text(0.3, 0.49, 'use sunscreen',cex=.8)
rect(0.1,0.4, 0.48, 0.6)
arrows(0.49, 0.78, 0.38, 0.62, length=0.08, lwd=1.5)
text(0.87, 0.5, 'skin cancer',cex=.8)
rect(0.71,0.4, 1.01, 0.6)
arrows(0.67, 0.78, 0.8, 0.62, length=0.08, lwd=1.5)
arrows(0.5, 0.5, 0.69, 0.5, length=0.08, col=COL[6,2])
#text(0.6, 0.495, 'X', cex=2, col=COL[4])
text(0.595, 0.565, "?", cex=1.5, col=COL[4])
SAT %>%
gf_point(sat~expend,xlab="Expenditure per pupil",ylab="Average SAT score",title="SAT Scores versus Expenditures") %>%
gf_theme(theme_classic())
SAT %>%
mutate(fracGroup = derivedFactor(
Hi = (frac > 40),
Low = (frac <=40) )) %>%
gf_point(sat~expend,color=~fracGroup,xlab="Expenditure per pupil",ylab="Average SAT score",title="SAT Scores versus Expenditures") %>%
gf_lm() %>%
gf_theme(theme_classic()) %>%
gf_labs(color="Fraction")
pch <- 1
cex <- sqrt(county_M377$pop2010/1e6)
colPop <- fadeColor(ifelse(cex > 0.35, COL[4], COL[1]), substr(gray(0.6+cex*0.1),2,3))
colSm  <- colPop
cexF   <- 2
cex <- 0.7
pch <- 20
gp1 <- cex < 0.32
colSm  <- COL[1,3]
colPop <- COL[1,3]
cexF   <- 1
plot(county$multiunit[gp1], county$homeownership[gp1], pch=pch, col=colSm, xlab="", ylab="Percent of Homeownership", axes=FALSE, cex=ifelse(cex < 0.32, 0.32, cex)[gp1], xlim=range(county$multiunit), ylim=range(county$homeownership))
pch <- 1
cex <- sqrt(county_M377$pop2010/1e6)
colPop <- fadeColor(ifelse(cex > 0.35, COL[4], COL[1]), substr(gray(0.6+cex*0.1),2,3))
colSm  <- colPop
cexF   <- 2
cex <- 0.7
pch <- 20
gp1 <- cex < 0.32
colSm  <- COL[1,3]
colPop <- COL[1,3]
cexF   <- 1
plot(county_M377$mult_iunit[gp1], county_M377$homeownership[gp1], pch=pch, col=colSm, xlab="", ylab="Percent of Homeownership", axes=FALSE, cex=ifelse(cex < 0.32, 0.32, cex)[gp1], xlim=range(county_M377$multi_unit), ylim=range(county_M377$homeownership))
at = seq(0, 100, 20)
axis(1, at, paste0(at, "%"))
axis(2, at, paste0(at, "%"))
box()
points(county_M377$multi_unit[!gp1], county_M377$homeownership[!gp1], pch=pch, col=colPop, xlab="", ylab="Percent of Homeownership", cex=ifelse(cex < 0.32, 0.32, cex)[!gp1])
points(county_M377$multi_unit[!gp1], county_M377$homeownership[!gp1], pch=20, cex = 0.2, col=COL[5,3])
#points(cc$housing_multi_unit, cc$home_ownership, pch=".", cex=1)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Percent of Units in Multi-Unit Structures", 1, 1.9, cex= 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(mosaic)
library(openintro)
plot(county$poverty, county$fed_spend, pch=20, cex=0.7, col=COL[1,3], ylim=c(0,31.25), xlab="", ylab="Federal Spending Per Capita", axes=FALSE,cex.lab=.75)
axis(1)
axis(2, at=seq(0, 30, 10))
box()
points(county$poverty, county$fed_spend, pch=20, cex = 0.18)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Poverty Rate (Percent)", 1, 1.9)
t1 <- county$poverty[1088]
t2 <- county$fed_spend[1088]
lines(c(t1,t1), c(-10,t2), lty=2, col=COL[4])
names(county_M377)
plot(county_M377$poverty, county_M377$fed_spend, pch=20, cex=0.7, col=COL[1,3], ylim=c(0,31.25), xlab="", ylab="Federal Spending Per Capita", axes=FALSE,cex.lab=.75)
axis(1)
axis(2, at=seq(0, 30, 10))
box()
points(county_M377$poverty, county_M377$fed_spend, pch=20, cex = 0.18)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Poverty Rate (Percent)", 1, 1.9)
t1 <- county_M377$poverty[1088]
t2 <- county_M377$fed_spend[1088]
lines(c(t1,t1), c(-10,t2), lty=2, col=COL[4])
lines(c(-10,t1), c(t2,t2), lty=2, col=COL[4])
points(t1, t2, col=COL[4])
text(43, 29, "32 counties with higher\nfederal spending are not shown", cex=0.6)
plot(county_M377$poverty, county_M377$fed_spend, pch=20, cex=0.7, col=COL[1,3], ylim=c(0,31.25), xlab="", ylab="Federal Spending Per Capita", axes=FALSE,cex.lab=.75)
axis(1)
axis(2, at=seq(0, 30, 10))
box()
points(county_M377$poverty, county_M377$fed_spend, pch=20, cex = 0.18)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Poverty Rate (Percent)", 1, 1.9)
t1 <- county_M377$poverty[1088]
t2 <- county_M377$fed_spend[1088]
lines(c(t1,t1), c(-10,t2), lty=2, col=COL[4])
lines(c(-10,t1), c(t2,t2), lty=2, col=COL[4])
points(t1, t2, col=COL[4])
text(43, 29, "32 counties with higher\nfederal spending are not shown", cex=0.6)
data(COL)
plot(email50$num_char, email50$line_breaks, pch=19, cex=1.3, col=COL[1,4], xlab="", ylab="Number of Lines", axes=FALSE)
axis(2)
axis(1)
box()
points(email50$num_char, email50$line_breaks, cex=1.3, col=COL[1,1])
mtext("Number of Characters (in thousands)", 1, 1.9)
data(cars)
data(COL)
plot(cars$weight, cars$price, xlab='Weight (Pounds)', ylab='Price ($1000s)', pch=19, col=COL[1,2], ylim=c(0, max(cars$price)))
cars
?cars
?cars
cars93
data(cars93)
data(COL)
plot(cars93$weight, cars93$price, xlab='Weight (Pounds)', ylab='Price ($1000s)', pch=19, col=COL[1,2], ylim=c(0, max(cars$price)))
data(cars93)
data(COL)
plot(cars93$weight, cars93$price, xlab='Weight (Pounds)', ylab='Price ($1000s)', pch=19, col=COL[1,2], ylim=c(0, max(cars93$price)))
w  <- seq(1000, 5000, 100)
# Rough Model
g1 <- lm(price ~ weight, cars93, weights=1/weight^2)
g2 <- lm(price ~ weight + I(weight^2), cars93, weights=1/weight^2)
p  <- predict(g2, data.frame(weight=w))
lines(w, p, lty=2, col=COL[5,3])
?mlb
gf_histogram(~salary/1000,data=mlb,main="", bins=15, xlab="Salary (millions of dollars)", ylab="", fill=COL[1]) %>%
gf_theme(theme_classic())
mammals
names(mammals)
knitr::opts_chunk$set(echo = TRUE)
gf_dens(~total_sleep,data=mammals)
gf_boxplot(~life_span,data=mammals)
mean(~life_span,data=mammals,na.rm=TRUE)
median(~life_span,data=mammals,na.rm=TRUE)
favstats(life_span~Danger,data=mammals)
favstats(life_span~danger,data=mammals)
mammals %>%
gf_boxplot(life_span~factor(exposure))
favstats(life_span~factor(exposure),data=mammals)
gf_dens(~life_span,color=~factor(exposure),data=mammals)
mammals <- mammals %>%
mutate(exposed=factor(ifelse((exposure==1)|(exposure==2),"Low","High")))
inspect(mammals)
gf_dens(~life_span,color=~exposed,data=mammals)
mammals %>%
gf_point(life_span~gestation)
mammals %>%
gf_point(gestation~life_span)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vcd)
library(vcdExtra)
library(openintro)
library(mosaic)
library(usdata)
county_M377 <- county_complete %>%
select(name, state, pop2000, pop2010, fed_spend=fed_spending_2009, poverty=poverty_2010,
homeownership = homeownership_2010, multi_unit = housing_multi_unit_2010,
income = per_capita_income_2010, med_income = median_household_income_2010) %>%
mutate(fed_spend=fed_spend/pop2010)
county_M377 %>%
select(pop2000,pop2010,median_household_income) %>%
inspect()
county_M377 %>%
select(pop2000,pop2010,med_income) %>%
inspect()
cc_reduced <- county_M377 %>%
drop_na(pop2000) %>%
select(pop2000,pop2010,med_income) %>%
mutate(pop_gain = sign(pop2010-pop2000))
tally(~pop_gain,data=cc_reduced)
cc_reduced <- cc_reduced %>%
filter(pop_gain != 0) %>%
mutate(pop_gain = factor(pop_gain,levels=c(-1,1),labels=c("Loss","Gain")))
inspect(cc_reduced)
cc_reduced %>%
gf_boxplot(median_household_income~pop_gain,
subtitle="The income data were collected between 2006 and 2010.",
xlab="Population change from 2000 to 2010",
ylab="Median Household Income")
cc_reduced %>%
gf_boxplot(med_income~pop_gain,
subtitle="The income data were collected between 2006 and 2010.",
xlab="Population change from 2000 to 2010",
ylab="Median Household Income")
cc_reduced %>%
gf_dens(~med_income,color=~pop_gain,lwd=1)
immigration
levels(immigration$political)
inspect(immigration)
tally(~political,data=immigration)
tally(~political,data=immigration,format="percent")
round(tally(~political,data=immigration,format="percent"),2)
round(tally(~response+political,data=immigration,format="percent"),2)
round(tally(~response+political,data=immigration,format="percent",margins = TRUE),2)
round(tally(response~political,data=immigration,format="percent",margins = TRUE),2)
immigration %>%
gf_props(~political,fill=~response)
immigration %>%
gf_props(~political,fill=~response,position="fill")
immigration %>%
gf_props(~political,fill=~response,position="fill") %>%
gf_labs(title="Tampa Florida Voter Views on Illegal Immigrant Workers",
subtitle="Broken down by political views",x="Political View",y="Proportion")
immigration %>%
gf_props(~political,fill=~response,position="fill") %>%
gf_labs(title="Tampa Florida Voter Views on Illegal Immigrant Workers",
subtitle="Broken down by political views",x="Political View",y="Proportion") %>%
gf_theme(theme_bw())
dream
library(openintro)
library(vcd)
library(vcdExtra)
library(mosaic)
library(tidyverse)
mosaic(stance~ideology,data=dream)
mosaic(stance~ideology,data=dream,xlab="Stance on Dream Act")
mosaic(stance~ideology,data=dream,x="Stance on Dream Act")
?mosaic
mosaic(stance~ideology,data=dream,main="Views on the DREAM Act")
mosaic(stance~ideology,data=dream,sub="Views on the DREAM Act")
mosaic(stance~ideology,data=dream,sub="Views on the DREAM Act",shade=TRUE)
mosaic(stance~ideology,data=dream,sub="Views on the DREAM Act")
mosaic(stance~ideology,data=dream,sub="Views on the DREAM Act",shade=TRUE)
heart_transplant
?heart_transplant
mosaic(survived~transplant,data=heart_transplant)
heart_transplant %>%
gf_boxplot(survtime~transplant)
heart_transplant %>%
gf_boxplot(survtime~transplant) %>%
gf_labs(title="Survival times for tranplant experiment",
sub="Treatment group had the transplant",x="Tranplant",y="Survival time in days")
heart_transplant %>%
gf_boxplot(survtime~transplant) %>%
gf_labs(title="Survival times for tranplant experiment",
sub="Treatment group had the transplant",x="Tranplant",y="Survival time in days") %>%
gf_theme(theme_classic())
knitr::opts_chunk$set(echo = TRUE)
library(openintro)
library(mosaic)
library(tidyverse)
gf_histogram(~total_sleep,data=mammals)
gf_histogram(~total_sleep,data=mammals,binwidth = 2)
gf_histogram(~total_sleep,data=mammals,binwidth = 1.5)
gf_histogram(~total_sleep,data=mammals,binwidth = 1.75)
gf_dens(~total_sleep,data=mammals)
gf_histogram(~total_sleep,data=mammals,binwidth = 2)
gf_histogram(~life_span,color=~factor(exposure),data=mammals)
gf_histogram(~life_span|factor(exposure),data=mammals)
gf_histogram(~life_span,color=~factor(exposure),data=mammals)
gf_histogram(~life_span|factor(exposure),data=mammals)
gf_dens(~life_span|factor(exposure),data=mammals)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vcd)
library(vcdExtra)
library(openintro)
library(mosaic)
email %>%
select(spam,number) %>%
inspect()
tally(~spam+number,data=email,margins = TRUE)
email <- email %>%
mutate(spam = factor(email$spam,levels=c(1,0),labels=c("spam","not spam")))
email %>%
select(spam,number) %>%
inspect()
tally(~spam+number,data=email,margins = TRUE)
tally(~number,data=email)
tally(~number,data=email,format='proportion')
round(tally(~number,data=email,format='percent'),2)
email %>%
gf_bar(~number)
email %>%
gf_props(~number)
email %>%
gf_props(~number,title="The proportions of emails with a number in it",
subtitle="From 2012",xlab="Type of number in the email",ylab="Proportion of emails") %>%
gf_theme(theme_bw())
tally(spam~number,data=email,margins = TRUE,format='proportion')
tally(number~spam,data=email,margins = TRUE,format='proportion')
email <- email %>%
mutate(format = factor(email$format,levels=c(1,0),labels=c("HTML","text")))
tally(spam~format,data=email,margins = TRUE,format="proportion")
tally(spam~number,email,format='proportion',margin=TRUE)
tally(number~spam,email,format='proportion',margin=TRUE)
email %>%
gf_bar(~number,fill=~spam)
email %>%
gf_props(~number,fill=~spam,position='fill')
mosaic(~number,data=email)
tally(~number+spam,data=email,format='proportion')
mosaic(~number+spam,data=email)
tally(~spam,data=email,format="proportion")
tally(number~spam,data=email,margins = TRUE,format="proportion")
mosaic(~spam+number,data=email)
pie(table(email$number), col=COL[c(3,1,2)], radius=0.75)
library(usdata)
county_M377 <- county_complete %>%
select(name, state, pop2000, pop2010, fed_spend=fed_spending_2009, poverty=poverty_2010,
homeownership = homeownership_2010, multi_unit = housing_multi_unit_2010,
income = per_capita_income_2010, med_income = median_household_income_2010) %>%
mutate(fed_spend=fed_spend/pop2010)
county_M377 %>%
select(pop2000,pop2010,med_income) %>%
inspect()
cc_reduced <- county_M377 %>%
drop_na(pop2000) %>%
select(pop2000,pop2010,med_income) %>%
mutate(pop_gain = sign(pop2010-pop2000))
tally(~pop_gain,data=cc_reduced)
cc_reduced <- cc_reduced %>%
filter(pop_gain != 0) %>%
mutate(pop_gain = factor(pop_gain,levels=c(-1,1),labels=c("Loss","Gain")))
inspect(cc_reduced)
cc_reduced %>%
gf_boxplot(med_income~pop_gain,
subtitle="The income data were collected between 2006 and 2010.",
xlab="Population change from 2000 to 2010",
ylab="Median Household Income")
cc_reduced %>%
gf_dens(~med_income,color=~pop_gain,lwd=1)
knitr::opts_chunk$set(echo = TRUE)
library(openintro)
library(vcd)
library(vcdExtra)
library(mosaic)
library(tidyverse)
levels(immigration$political)
inspect(immigration)
round(tally(~response+political,data=immigration,format="percent",margins = TRUE),2)
round(tally(response~political,data=immigration,format="percent",margins = TRUE),2)
immigration %>%
gf_props(~political,fill=~response,position="fill") %>%
gf_labs(title="Tampa Florida Voter Views on Illegal Immigrant Workers",
subtitle="Broken down by political views",x="Political View",y="Proportion") %>%
gf_theme(theme_bw())
mosaic(stance~ideology,data=dream,sub="Views on the DREAM Act")
mosaic(survived~transplant,data=heart_transplant)
heart_transplant %>%
gf_boxplot(survtime~transplant) %>%
gf_labs(title="Survival times for tranplant experiment",
sub="Treatment group had the transplant",x="Tranplant",y="Survival time in days") %>%
gf_theme(theme_classic())
mosaic(stance~ideology,data=dream)
knitr::opts_chunk$set(echo = TRUE)
factorial(365)
365*364
prod(365:364)
1- prod(365:348)/(365^18)
birthday_prob <- function(n=20){
1- prod(365:(365-(n-1)))/(365^n)
}
birthday_prob(18)
birthday_prob(23)
birthday_prob(1:20)
birthday_prob <- Vectorize(birthday_prob)
birthday_prob(1:20)
gf_line(birthday_prob(1:100)~ seq(1,100),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 2 people with matching birthdays")
library(mosaic)
library(tidyverse)
gf_line(birthday_prob(1:100)~ seq(1,100),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 2 people with matching birthdays")
inspect(Births)
Births %>%
filter(year == 1969) %>%
gf_point(births~day_of_year)
Births %>%
filter(year == 1969) %>%
gf_point(births~day_of_year,color=~factor(day_of_week))
Births %>%
group_by(year) %>%
summarise(n=n())
Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(year) %>%
summarise(n=n())
birth_data <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
head(birth_data)
birth_data <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
birth_data %>%
gf_line(n~day_of_year,
xlab="Day of the year",
ylab="Number of births")
birth_data %>%
gf_point(n~day_of_year,
xlab="Day of the year",
ylab="Number of births")
birth_data %>%
select(n) %>%
pull()
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
days <- seq(1,365)
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
birth_data_weights <- birth_data %>%
select(n) %>%
pull()
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
knitr::opts_chunk$set(echo = TRUE)
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
gf_bar(~length)
choose(23,2)*prod(365:344)/365^23
exactly_two <- function(n){
choose(n,2)*prod(365:(365-(n-2)))/365^n
}
exactly_two(23)
exactly_two <- Vectorize(exactly_two)
gf_line(exactly_two(1:100)~ seq(1,100),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of exactly least 2 people with matching birthdays")
set.seed(10)
temp <- table(sample(days,size=23,replace = TRUE))
temp
(sum(temp==2) == 2)+0
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==2)+0)) %>%
summarise(prob=mean(result))
