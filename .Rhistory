gf_labs(title="Randomization test sampling distribution",
x="Test statistic")
results %>%
gf_dhistogram(~result) %>%
gf_dist("f",df1=3,df2=323,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="F distribution is overlayed in red",
x="Test statistic")
f_stat2 <- function(x){
aov(obp~shuffle(position),data=x) %>%
tidy() %>%
summarize(stat=meansq[1]-meansq[2]) %>%
pull(stat)
}
set.seed(5321)
results<-do(1000)*(f_stat2(mlb_obp))
results %>%
gf_dhistogram(~result) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="Test statistic is the difference in variances",
x="Test statistic")
obs<-aov(obp~position,data=mlb_obp) %>%
tidy() %>%
summarize(stat=meansq[1]-meansq[2]) %>%
pull(stat)
obs
prop1(~(result>=obs),results)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
f_boot <- function(x){
aov(obp~position,data=resample(x)) %>%
tidy() %>%
summarize(stat=meansq[1]/meansq[2]) %>%
pull()
}
set.seed(541)
results<-do(1000)*f_boot(mlb_obp)
results %>%
gf_histogram(~f_boot) %>%
gf_theme(theme_classic())
results %>%
gf_histogram(~f_boot) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Bootstrap sampling distribution of F test statistic",
x="Test statistic")
cdata(~f_boot,data=results)
mlb_prob3 <- mlb_obp %>%
filter(position=="IF"|position=="OF") %>%
droplevels()
summary(mlb_prob3)
mlb_prob3 %>%
gf_boxplot(obp~position) %>%
gf_theme(theme_classic())
mlb_prob3 %>%
group_by(position) %>%
summarize(stat=sd(obp))
obs <- mlb_prob3 %>%
summarize(stat=sd(obp[position=="IF"])-sd(obp[position=="OF"])) %>%
pull()
obs
perm_stat <- function(x){
x %>%
mutate(position=shuffle(position)) %>%
summarize(stat=sd(obp[position=="IF"])-sd(obp[position=="OF"])) %>%
pull()
}
set.seed(443)
results<-do(1000)*perm_stat(mlb_prob3)
results %>%
gf_histogram(~perm_stat) %>%
gf_vline(xintercept=obs,color="red")
results %>%
gf_histogram(~perm_stat) %>%
gf_vline(xintercept=obs,color="red") %>%
gf_theme(theme_classic())
results %>%
gf_histogram(~perm_stat) %>%
gf_vline(xintercept=obs,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Sampling distribution of difference in variances",
subtitle="Randomization permutation test",
x="Test statistic")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
qnorm(.975)
pnorm(1.96)-pnorm(-1.96)
curve(dnorm(x),from=-3.5,to=3.5,xaxt="n",xlab="",ylab="f")
polygon(c(-1.5,seq(-1.5,1.5,0.01),1.5),c(0,dnorm(seq(-1.5,1.5,0.01)),0),density=15)
text(-1.55,0.35,expression(paste("Prob=1-",alpha,sep="")))
arrows(-1.5,0.32,-0.8,0.25,length=0.1)
axis(1,at=c(-1.5,1.5),labels=c(expression(paste("-z_",alpha,"/2",sep="")),expression(paste("z_",alpha,"/2",sep=""))))
text(-3,0.08,expression(paste("Prob=",alpha,"/2",sep="")))
arrows(-3,0.06,-2.25,0.02,length=0.1)
text(3,0.08,expression(paste("Prob=",alpha,"/2",sep="")))
arrows(3,0.06,2.25,0.02,length=0.1)
qnorm(1-0.05/2)
qnorm(.975)
temperature <- read_csv("data/temperature.csv")
temperature %>%
favstats(~temperature,data=.) %>%
select(mean,sd,n) %>%
summarise(lower_bound=mean-qt(0.975,129)*sd/sqrt(n),
upper_bound=mean+qt(0.975,129)*sd/sqrt(n))
t_test(~temperature,data=temperature,mu=98.6)
confint(t_test(~temperature,data=temperature,mu=98.6))
temperature %>%
favstats(~temperature,data=.) %>%
select(mean,sd,n) %>%
summarise(upper_bound=mean+qt(0.95,129)*sd/sqrt(n))
confint(t_test(~temperature,data=temperature,alternative="less"))
stent <- read_csv("data/stent_study.csv")
tally(~group+outcome30,data=stent,margins = TRUE)
tally(outcome30~group,data=stent,margins = TRUE,format="proportion")
obs<-diffprop(outcome30~group,data=stent)
obs
obs<-diffprop(outcome30~group,data=stent)
obs
set.seed(2027)
results <- do(10000)*diffprop(outcome30~shuffle(group),data=stent)
results %>%
gf_dhistogram(~diffprop) %>%
gf_vline(xintercept =obs ) %>%
gf_theme(theme_classic())
results %>%
gf_dhistogram(~diffprop) %>%
gf_vline(xintercept =obs ) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Sampling distribution of randomization test",
x="Difference in proportions")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
qnorm(.975)
pnorm(1.96)-pnorm(-1.96)
curve(dnorm(x),from=-3.5,to=3.5,xaxt="n",xlab="",ylab="f")
polygon(c(-1.5,seq(-1.5,1.5,0.01),1.5),c(0,dnorm(seq(-1.5,1.5,0.01)),0),density=15)
text(-1.55,0.35,expression(paste("Prob=1-",alpha,sep="")))
arrows(-1.5,0.32,-0.8,0.25,length=0.1)
axis(1,at=c(-1.5,1.5),labels=c(expression(paste("-z_",alpha,"/2",sep="")),expression(paste("z_",alpha,"/2",sep=""))))
text(-3,0.08,expression(paste("Prob=",alpha,"/2",sep="")))
arrows(-3,0.06,-2.25,0.02,length=0.1)
text(3,0.08,expression(paste("Prob=",alpha,"/2",sep="")))
arrows(3,0.06,2.25,0.02,length=0.1)
qnorm(1-0.05/2)
qnorm(.975)
temperature <- read_csv("data/temperature.csv")
temperature %>%
favstats(~temperature,data=.) %>%
select(mean,sd,n) %>%
summarise(lower_bound=mean-qt(0.975,129)*sd/sqrt(n),
upper_bound=mean+qt(0.975,129)*sd/sqrt(n))
t_test(~temperature,data=temperature,mu=98.6)
confint(t_test(~temperature,data=temperature,mu=98.6))
temperature %>%
favstats(~temperature,data=.) %>%
select(mean,sd,n) %>%
summarise(upper_bound=mean+qt(0.95,129)*sd/sqrt(n))
confint(t_test(~temperature,data=temperature,alternative="less"))
stent <- read_csv("data/stent_study.csv")
tally(~group+outcome30,data=stent,margins = TRUE)
tally(outcome30~group,data=stent,margins = TRUE,format="proportion")
obs<-diffprop(outcome30~group,data=stent)
obs
obs<-diffprop(outcome30~group,data=stent)
obs
set.seed(2027)
results <- do(10000)*diffprop(outcome30~shuffle(group),data=stent)
results %>%
gf_dhistogram(~diffprop) %>%
gf_vline(xintercept =obs ) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Sampling distribution of randomization test",
x="Difference in proportions")
2*prop1(~(diffprop<=obs),data=results)
2*pnorm(-3.16)
results %>%
gf_dhistogram(~diffprop) %>%
gf_vline(xintercept =obs ) %>%
gf_dist("norm",sd=0.0285,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Sampling distribution of randomization test",
subtitle="Reference normal distribution in red",
x="Difference in proportions")
results %>%
gf_dhistogram(~diffprop) %>%
gf_vline(xintercept =obs ) %>%
gf_dist("norm",sd=0.0285,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Sampling distribution of randomization test",
subtitle="Reference normal distribution in red",
x="Difference in proportions")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
1-pchisq(x2,1)
results %>%
gf_dhistogram(~result) %>%
gf_dist("f",df1=3,df2=323,color="darkblue") %>%
gf_vline(xintercept = 1.994,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="F distribution is overlayed in red",
x="Test statistic")
set.seed(5321)
results<-do(1000)*(f_stat(mlb_obp))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
set.seed(5321)
results<-do(1000)*(f_stat(mlb_obp))
library(broom)
set.seed(5321)
results<-do(1000)*(f_stat(mlb_obp))
results %>%
gf_dhistogram(~result) %>%
gf_dist("f",df1=3,df2=323,color="darkblue") %>%
gf_vline(xintercept = 1.994,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="F distribution is overlayed in red",
x="Test statistic")
results %>%
gf_dhistogram(~result) %>%
gf_dist("f",df1=3,df2=323,color="darkblue") %>%
gf_vline(xintercept = 1.994,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="F distribution is overlayed in blue",
x="Test statistic")
set.seed(5321)
results<-do(1000)*(f_stat2(mlb_obp))
results %>%
gf_dhistogram(~result) %>%
gf_vline(xintercept = 1.994,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="Test statistic is the difference in variances",
x="Test statistic")
results %>%
gf_dhistogram(~result) %>%
gf_vline(xintercept = 1.994,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="Test statistic is the difference in variances",
x="Test statistic")
results %>%
gf_dhistogram(~result) %>%
gf_vline(xintercept = 0.001255972,color="red") %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Randomization test sampling distribution",
subtitle="Test statistic is the difference in variances",
x="Test statistic")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(knitr)
library(mosaic)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(openintro)
library(oilabs)
library(knitr)
library(mosaic)
library(tidyverse)
head(hfi)
write_csv(hfi,"data/hfi.csv")
hfi<-read_csv("data/hfi.csv")
hfi<-read_csv("data/hfi.csv")
summary(hfi)
inspect(hfi)
hfi<-tibble(read_csv("data/hfi.csv"))
inspect(hfi)
openintro::hfi
dim(hfi)
summary(hfi)
gf_point(pf_score~pf_expression_control,data=hfi)
gf_point(pf_score~pf_expression_control,data=hfi)
gf_point(pf_score~pf_expression_control,data=hfi) %>%
gf_theme(theme_bw())
ggplot(hfi,aes(x=pf_expression_control,y=pf_score~pf))+
geom_point(alpha=0.3)
ggplot(hfi,aes(x=pf_expression_control,y=pf_scorepf))+
geom_point(alpha=0.3)
ggplot(hfi,aes(x=pf_expression_control,y=pf_score))+
geom_point(alpha=0.3)
ggplot(hfi,aes(x=pf_expression_control,y=pf_score))+
geom_point(alpha=0.3) +
theme_bw()
gf_lm(pf_score~pf_expression_control,data=hfi) %>%
gf_theme(theme_bw()) %>%
gf_point()
gf_lm(pf_score~pf_expression_control,data=hfi) %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3)
gf_lm(pf_score~pf_expression_control,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3)
gf_lm(pf_score~pf_expression_control,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control ")
gf_lm(pf_score~pf_expression_control,data=hfi,color="black") %>%
gf_theme(theme_bw()) %>%
gf_point(alpha=0.3) %>%
gf_labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
ggplot(hfi,aes(x=pf_expression_control,y=pf_score))+
geom_point(alpha=0.3) +
theme_bw()+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
ggplot(hfi,aes(x=pf_expression_control,y=pf_score))+
geom_point(alpha=0.3) +
theme_bw()+
geom_lm()+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
ggplot(hfi,aes(x=pf_expression_control,y=pf_score))+
geom_point(alpha=0.3) +
theme_bw()+
geom_lm(color="black")+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
hfi %>%
summarise(cor(pf_expression_control, pf_score, use = "complete.obs"))
inspect(hfi)
describe(hfi)
str(hfi)
inspect(hfi[:1:10])
inspect(hfi[,1:10])
#this isn't working, wondering if we should just remove rows with NA
plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub)
plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub)
set.seed(4011)
hfi_sub <- hfi %>%
select(pf_expression_control,pf_score,hf_score) %>%
drop_na() %>%
group_by(pf_expression_control) %>%
slice_sample(n=1)
hfi_sub
?slice_sample
plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub)
plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub, showSquares = TRUE)
plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub, showSquares = TRUE)
plot_ss
my_plot_ss <- function (x, y, data, showSquares = FALSE, leastSquares = FALSE)
{
x <- eval(substitute(x), data)
y <- eval(substitute(y), data)
plot(y ~ x, asp = 1, pch = 16)
if (leastSquares) {
m1 <- lm(y ~ x)
y.hat <- m1$fit
}
else {
cat("Click two points to make a line.")
pt1 <- locator(1)
points(pt1$x, pt1$y, pch = 4)
pt2 <- locator(1)
points(pt2$x, pt2$y, pch = 4)
pts <- data.frame(x = c(pt1$x, pt2$x), y = c(pt1$y, pt2$y))
m1 <- lm(y ~ x, data = pts)
y.hat <- predict(m1, newdata = data.frame(x))
}
r <- y - y.hat
abline(m1)
oSide <- x - r
LLim <- par()$usr[1]
RLim <- par()$usr[2]
oSide[oSide < LLim | oSide > RLim] <- c(x + r)[oSide < LLim |
oSide > RLim]
n <- length(y.hat)
for (i in 1:n) {
lines(rep(x[i], 2), c(y[i], y.hat[i]), lty = 2, col = "blue")
if (showSquares) {
lines(rep(oSide[i], 2), c(y[i], y.hat[i]), lty = 3,
col = "orange")
lines(c(oSide[i], x[i]), rep(y.hat[i], 2), lty = 3,
col = "orange")
lines(c(oSide[i], x[i]), rep(y[i], 2), lty = 3, col = "orange")
}
}
SS <- round(sum(r^2), 3)
cat("\r                                ")
print(m1)
cat("Sum of Squares: ", SS)
}
my_plot_ss(x = pf_expression_control, y = pf_score, data = hfi_sub, showSquares = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(out.width = "75%")
library(knitr)
library(mosaic)
library(tidyverse)
library(oilabs)
m2<-lm(hf_score ~ pf_expression_control, data = hfi_sub)
summary(m2)
summary(m2)
ggplot(data = hfi_sub, aes(x = pf_expression_control, y = pf_score)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
ggplot(data = hfi_sub, aes(x = pf_expression_control, y = pf_score)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE,color="black") +
theme_bw()+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
ggplot(data = hfi_sub, aes(x = pf_expression_control, y = pf_score)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE,color="black") +
theme_bw()+
labs(title="Personal freedom score versus Expression control",
x="Political pressures and controls on media",
y="Personal freedom score")
hfi_sub
predict(m1)
predict(m1,newdata=data.frame(pf_expression_control=6.7))
hfi_sub %>%
filter(pf_expression_control==6.7)
hfi_sub %>%
count(pf_expression_control)
hfi_sub %>%
filter(pf_expression_control==6.7)
hfi_sub
hfi_sub %>%
filter(pf_expression_control==6.75)
predict(m1,newdata=data.frame(pf_expression_control=6.75))
hfi_sub %>%
filter(pf_expression_control==6.75)
library(broom)
tidy(m1)
augment(m1)
8.628272 - 7.861402
augment(m1) %>%
filter(pf_expression_control==6.75)
names(m1)
attributes(m1)
m1
c(m1$residuals,m1$fitted.values)
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals") +
theme_bw()
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x="Fitted values",y="Residuals") +
theme_bw()
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x="Fitted values",y="Residuals",title="Residual analysis") +
theme_bw()
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 2) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .2) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .5) +
xlab("Residuals")
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .4) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = .4) +
xlab("Residuals") +
theme_bw()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
theme_bw()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
theme_bw() +
geom_abline(slope=1,intercept = 0)
