rflip(results['tails'],.001,summarize = TRUE)
rflip(results['tails'],prob=.001,summarize = TRUE)
results['tails']
class(results['tails'])
as.numeric(results['tails'])
rflip(as.numeric(results['tails']),prob=.001,summarize = TRUE)
set.seed(43)
results <- rflip(1000000,0.0001,summarize = TRUE)
results
rflip(as.numeric(results['tails']),prob=.001,summarize = TRUE)
100/(100+959)
.8^3
1/8
.125*.5/(.125*.5+.8^3*.5)
rflip(3)
do(10)*rflip(3)
knitr::opts_chunk$set(echo = TRUE)
library(prob)
set.seed(501)
rflip(1000,summarize = TRUE)
set.seed(501)
results <- rflip(1000000,summarize = TRUE)
results
do(500717)*rflip(3) %>%
filter(heads==3) %>%
summarise(count=n())
(do(500717)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n())
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n())
do(4)*rflip(3)
(do(4)*rflip(3)) %>%
filter(heads==1)
library(tidyverse)
(do(4)*rflip(3)) %>%
filter(heads==1)
class(do(4)*rflip(3))
names(do(4)*rflip(3))
data.frame(do(4)*rflip(3)) %>%
filter(heads==1)
do(4)*rflip(3) %>%
data.frame() %>%
filter(heads==1)
class(do(4)*rflip(3))
data.frame(do(4)*rflip(3))
class(data.frame(do(4)*rflip(3)))
library(tidyverse)
data.frame(do(4)*rflip(3)) %>%
filter(heads==1)
results <-data.frame(do(4)*rflip(3))
results
results %>%
filter(heads==1)
names(results)
colnames(results)
names(Births)
Births %>%
filter(year == 1969) %>%
gf_point(births~day_of_year)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
data.frame(do(4)*rflip(3)) %>%
filter(heads==1)
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n())
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3)) %>%
filter(heads==3,prob=.8) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
6270/(6270+25512)
.125*.5/(.125*.5+.8^3*.5)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
pmf <- c(1/8,3/8,3/8,1/8)
pmf
cumsum(pmf)
cdf <- cumsum(pmf)
cdf
random
runif()
runif(1)
temp <- runif(1)
temp
temp < cdf
which(temp < cdf)
which(temp < cdf)[1]
set.seed(1153)
ran_num <- runif(1)
ran_num
pmf <- c(1/8,3/8,3/8,1/8)
names(pmf) <- c(0,1,2,3)
pmf
cdf <- cumsum(pmf)
cdf
ran_num < cdf
which(ran_num < cdf)
which(ran_num < cdf)[1]
names(cdf)[which(ran_num < cdf)[1]]
pmf <- c(1/8,3/8,3/8,1/8)
values <- c(0,1,2,3)
pmf
cdf <- cumsum(pmf)
cdf
values[which(ran_num < cdf)[1]]
ran_num
ran_num <- runif(1)
ran_num <- runif(2)
ran_num
ran_num < cdf
?Vectorize
simple_rv <- function(value,cdf){
ran_num <- runif(1)
return(values[which(ran_num < cdf)[1]])
}
simple_rv <- function(values,cdf){
ran_num <- runif(1)
return(values[which(ran_num < cdf)[1]])
}
simple_rv(values,cdf)
simple_rv(values,cdf)
simple_rv(values,cdf)
simple_rv(values,cdf)
simple_rv(values,cdf)
do(3)*simple_rv(values,cdf)
do(3)*simple_rv(values,cdf)
do(3)*simple_rv(values,cdf)
results <- do(1000)*simple_rv(values,cdf)
inspect(results)
results
head(results)
tally(~simple_rv,data=results)
tally(~simple_rv,data=results,format="proportion")
results <- do(10000)*simple_rv(values,cdf)
inspect(results)
tally(~simple_rv,data=results,format="proportion")
3/8
1/8
mean(~simple_rv,data=results
mean(~simple_rv,data=results)
?variance
?var
var(~simplr_rv,data=results)
var(~simple_rv,data=results)
var(~simple_rv,data=results)*(10000-1)/10000
rflip(1)
which(rbinom(100, 1, .2) == 1
)
which(rbinom(100, 1, .2) == 1)[1]
which(rbinom(100, 1, .2) == 1)[1]
which(rbinom(100, 1, .2) == 1)[1]
rflip(10)
?rflip
do(2)*rflip(100)
rflip(10,quiet = TRUE)
temp<-rflip(10,quiet = TRUE)
temp
temp
rm(temp)
names(rflip(10))
rflip(10)
rflip(10)=="H"
rflip
rflip(10)$sequence
rflip
atrr(rflip(10),sequence)
attr(rflip(10),sequence)
attr(rflip(10),"sequence")
class(rflip(3))
temp<-attr(rflip(10),"sequence")
temp
which(temp=='H')
which(temp=='H')[1]
sample(c("H","T",10,replace=TRUE))
sample(c("H","T"),10,replace=TRUE))
sample(c("H","T"),10,replace=TRUE)
.5^1000
set.seed(68)
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
set.seed(68)
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
knitr::opts_chunk$set(echo = TRUE)
library(prob)
do(3)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
do(3)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
do(3)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
results <- do(1000)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
mean(~result,data=results)
set.seed(68)
which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
results <- do(10000)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[1]
mean(~result,data=results)
results %>%
gf_bar(~result)
results %>%
gf_props(~result)
tally(~result,data=results,format="proportion")
tally(~result,data=results,format="percent")
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
set.seed(102)
results <- do(10000)*which(sample(c("H","T"),1000,replace=TRUE)=="H")[5]
mean(~result,data=results)
tally(~result,data=results,format="percent")
tinytex::tlmgr_install("multirow")
tinytex::tlmgr_install("multicolumn")
tinytex::tlmgr_search("/multirow.sty")
set.seed(9)
sim.diffs<-do(10)*abs(diff(sample(1:6,2,replace=T)))
sim.diffs
set.seed(9)
sim_diffs<-do(10)*abs(diff(sample(1:6,2,replace=T)))
tally(~abs,data=sim_diffs)
set.seed(9)
sim_diffs<-do(10000)*abs(diff(sample(1:6,2,replace=T)))
tally(~abs,data=sim_diffs,format="proportion")
mean(~abs,data=sim.diffs)
mean(~abs,data=sim_diffs)
var(sim_diffs)*9999/10000
true_mean<-sum(c(6,10,8,6,4,2)/36*c(0,1,2,3,4,5))
true_mean
sum(c(6,10,8,6,4,2)/36*(c(0,1,2,3,4,5)-true_mean)^2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
integrate(x^2,0,1)
integrate(function(x)x^2,0,1)
integrate(function(x)2*x,0,1)
integrate(function(x2*x,.1,.75))
integrate(function(x)2*x,.1,.75)
uniroot(function(x)x^2-.5)
uniroot(function(x)x^2-.5,c(0,1))
uniroot(function(x)x^2-.5,c(0,1))$root
sqrt(runif(1))
results <- do(3)*sqrt(runif(1))
results
results <- do(10000)*sqrt(runif(1))
inspect(results)
results %>%
gf_density(~sqrt)
results %>%
gf_density(~sqrt,x="X")
results %>%
gf_density(~sqrt,xlab="X")
integrate(function(x)x*2*x,0,1)
mean(~sqrt,data=results)
integrate(function(x)x^2*2*x,0,1)
integrate(function(x)x^2*2*x,0,1) -(2/3)^2
integrate(function(x)x^2*2*x,0,1)
integrate(function(x)x^2*2*x,0,1)$value
integrate(function(x)x^2*2*x,0,1)$value-(2/3)^2
var(~sqrt,data=results)
var(~sqrt,data=results)*9999/10000
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
uniroot(function(y)integrate(function(x)x^2/18,-y,y),c(-5,5))
integrate(function(y)y^2/18,-2,2)
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)
my_pdf(2)
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
my_pdf(2)
my_pdf(2:3)
my_pdf<-Vectorize(my_pdf)
my_pdf(2:3)
uniroot(my_pdf,c(-10,10))
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
uniroot(my_pdf,c(-10,10))
uniroot(my_pdf-1,c(-10,10))
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
my_pdf<-Vectorize(my_pdf)
domain <- seq(.01,5,.1)
my_pdf(domain)
domain <- seq(.01,5,.1)
gf_point(my_pdf(domain)~domain)
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain)
uniroot(function(x)my_pdf(x)-1,c(-10,10))
uniroot(function(x)my_pdf(x)-1,c(-10,10))$root
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
my_pdf<-Vectorize(my_pdf)
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain)
uniroot(function(x)my_pdf(x)-1,c(-10,10))$root
curve(x^2/18,from=-3,to=3,ylab="f(x)",main="pdf of X")
curve(x^2/18,from=-3,to=3,ylab="f(x)",main="pdf of X")
ggplot(data.frame(x=c(0, 10)), aes(x)) +
stat_function(fun=function(x) sin(x) + log(x))
ggplot(data.frame(x=c(-3, 3)), aes(x)) +
stat_function(fun=function(x) x^2/18)
ggplot(data.frame(x=c(-3, 3)), aes(x)) +
stat_function(fun=function(x) x^2/18)
x<-seq(-3.5,3.5,0.001)
fx<-pmin(1,(1*(x>=-3)*(x^3/54+1/2)))
plot(x,fx,type="l",ylab="F(x)",main="cdf of X")
x<-seq(-3.5,3.5,0.001)
fx<-pmin(1,(1*(x>=-3)*(x^3/54+1/2)))
gf_line(fx~x,ylab="F(x)",main="cdf of X")
x<-seq(-3,3,0.001)
fx<-x^2
gf_line(fx~x,ylab="f(x)",main="pdf of X")
integrate(function(x)x^2/18,c(-3,1))
integrate(function(x)x^2/18,-3,1)
integrate(function(x)x^2/18,1.5,2.5)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
uniroot(function(x)x^3/54+.5-.8,c(-3,3))
curve(x^2/18,from=-3,to=3,ylab="f(x)",main="pdf of X")
t<-seq(2.21,3,0.001)
polygon(c(2.21,t,3),c(0,t^2/18,0),density=15)
polygon(c(-2.21,-t,-3),c(0,t^2/18,0),density=15)
text(-2.3,0.4,"0.3")
text(2.3,0.4,"0.3")
2^2
2**2
do(10)*((runif(1)-.5)*54)^(1/3))
results <- do(10)*((runif(1)-.5)*54)^(1/3)
results
do(10)*(((runif(1)-.5)*54)^(1/3))
-2^(1/3)
(((runif(1)-.5)*54)^(1/3))
(((runif(1)-.5)*54)^(1/3))
(((runif(1)-.5)*54)^(1/3))
set.seed(2)
(((runif(1)-.5)*54)^(1/3))
set.seed(2)
runif(1)
0.1848823-.5
(0.1848823-.5)*54
((0.1848823-.5)*54)^(1/3)
((0.1848823-.5)*54)**(1/3)
-17^.33333
((0.1848823-.5)*54)^(.333)
-17.6^.33333
((0.1848823-.5)*54)
((0.1848823-.5)*54)^(.333)
((0.1848823-.5)*54)**(.333)
-17.6^.33333
-17.016^.33333
runif(10)
runif(10)-.5
set.seed(2)
runif(10)-.5
(runif(10)-.5)*54
((runif(10)-.5)*54)^(1/3)
set.seed(2)
((runif(10)-.5)*54)^(1/3)
set.seed(2)
((runif(10)-.5)*54)
cuberoot <- function(x) {
sign(x) * abs(x)^(1/3)
cuberoot <- function(x) {
sign(x) * abs(x)^(1/3)}
results <- do(10)*cuberoot(runif(1)-.5)*54)
results <- do(10)*cuberoot((runif(1)-.5)*54)
results
results <- do(10000)*cuberoot((runif(1)-.5)*54)
results %>%
gf_density(~cuberoot)
results %>%
gf_histogram(~cuberoot)
?gf_density
results %>%
gf_density(~cuberoot)
inspect(results)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
sample(1:6,4,replace=TRUE)
set.seed(61)
sample(1:6,4,replace=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
set.seed(4)
results <- do(10000)*cuberoot((runif(1)-.5)*54)
results %>%
gf_dens(~cuberoot)
gf_dist("binom",size=20,prob=.5)
###P(X=8)
dbinom(8,20,0.5)
###P(X<=8)
pbinom(8,20,0.5)
## or
sum(dbinom(0:8,20,0.5))
gf_dist("poisoon",2.8)
gf_dist("poison",2.8)
?gf_dist
gf_dist("pois",2.8)
gf_dist("pois",2.8)
?gf_dist
gf_dist
?dpois
gf_dist("pois",lambda=2.8)
gf_dist("pois",lambda=2.8,kind="cdf")
gf_dist("pois",lambda=2.8,kind="qq")
gf_dist("pois",lambda=2.8)
?dhyper
gf_dist("hyper",m=8,n=12,k=6)
knitr::opts_chunk$set(echo = TRUE)
gf_dist("binom",size=15,prob=0.01))
gf_dist("binom",size=15,prob=0.01)
1-pnbinom(49,3,0.01)
dbinom(50,52,.001)
dbinom(50,52,.01)
dbinom(50,52,.99)
dbinom(51,52,.99)
dbinom(52,52,.99)
dbinom(50:52,52,.99)
sum(dbinom(50:52,52,.99))
1-pnbinom(49,3,0.01)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
1-dbinom(49,52,.99)
1-pnbinom(49,3,0.01)
1-dbinom(50,52,.99)
sum(dbinom(50:52,52,.99))
1-pbinom(49,52,.99)
sum(dbinom(50:52,52,.99))
1-pnbinom(49,3,0.01)
dnbinom(49,3,0.01)
dnbinom(50,3,0.01)
dbinom(50,52,.99)
dbinom(50,52,.99)*.01
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
gf_dist("unif")
?runif
?dunif
integrate(function(x)dunif(x),0,1)
integrate(function(x)1/3*exp(-1/3*x),5,Inf)
gf_dist("exp")
gf_dist("exp")
runs<-8
size <- 40
time <- replicate(runs,cumsum(rexp(size)))
time
cumsum(rexp(size)
)
runs<-8
size <- 40
time <- replicate(runs,cumsum(rexp(size)))
df <- data.frame(time=as.vector(time),run=rep(1:runs,each=size))
df
stop<-min(apply(time,2,max))
stop
apply(time,2,max)
set.seed(9)
runs<-8
size <- 40
time <- replicate(runs,cumsum(rexp(size)))
df <- data.frame(time=as.vector(time),run=rep(1:runs,each=size))
stop<-min(apply(time,2,max))
stop <- 5 * trunc(stop/5)
stop
set.seed(9)
runs<-8
size <- 40
time <- replicate(runs,cumsum(rexp(size)))
df <- data.frame(time=as.vector(time),run=rep(1:runs,each=size))
stop<-min(apply(time,2,max))
stop <- 5 * trunc(stop/5)
lattice::stripplot(run~time,df,pch=1,cex=.7,
col='black',
panel=function(x,y,...){
panel.abline(h=seq(1.5,7.5,by=1),col='gray60')
panel.abline(v=seq(0,stop,by=5),col='gray60')
panel.stripplot(x,y,...)
})
