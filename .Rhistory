gf_theme(theme_classic()) %>%
gf_labs(color="Fraction")
3/5
6*.6
#=====> Cluster <=====#
PCH <- rep(c(1, 3, 20)[3], 3)
plot(0, xlim=c(0,2), ylim=0:1, type='n', axes=FALSE,xlab="",ylab="")
box()
X    <- c(0.17, 0.19, 0.52, 0.85, 1, 1.22, 1.49, 1.79, 1.85)
Y    <- c(0.3, 0.75, 0.5, 0.26, 0.73, 0.38, 0.67, 0.3, 0.8)
locs <- c(1, 4, 5, 3, 6, 2)
gps  <- list()
N    <- c(18, 12, 11, 13, 16, 14, 15, 16, 12)
R    <- sqrt(N/500)
p    <- matrix(c(6,  8, NA,
4,  4, NA,
4,  4, NA,
5,  4, NA,
8,  5, NA,
4,  5, NA,
5,  9, NA,
6,  5, NA,
4,  5, NA), 3)
p[3,] <- N - p[1,] - p[2,]
above <- c(-1, 1, 1, 1, 1, -1, 1, 1, 1)
for(i in 1:length(X)){
hold <- seq(0, 2*pi, len=99)
x    <- X[i] + (R[i]+0.02)*cos(hold)
y    <- Y[i] + (R[i]+0.02)*sin(hold)
polygon(x, y, border=COL[5,4])
if(i %in% c(3, 4, 8)){
polygon(x, y, border=COL[4], lty=2, lwd=1.5)
}
x    <- rep(NA, N[i])
y    <- rep(NA, N[i])
for(j in 1:N[i]){
inside <- FALSE
while(!inside){
xx <- runif(1, -R[i], R[i])
yy <- runif(1, -R[i], R[i])
if(sqrt(xx^2 + yy^2) < R[i]){
inside <- TRUE
x[j]   <- xx
y[j]   <- yy
}
}
}
type <- sample(1, N[i], TRUE)
pch  <- PCH[type]
col  <- COL[type]
x    <- X[i]+x
y    <- Y[i]+y
points(x, y, pch=pch, col=col)
these  <- 1:N[i]
if(i %in% c(3, 4, 8)){
points(x[these], y[these], pch=20, cex=0.8, col=colSamp)
points(x[these], y[these], cex=1.4, col=colSamp)
#points(x[these], y[these], pch=19, col=colSamp)
}
}
text(X, Y+above*(R+0.01), paste("Cluster", 1:length(X)), pos=2+above, cex=1.1)
?box
plot(0, xlim=c(0,2), ylim=0:1, type='n', axes=FALSE,xlab="",ylab="")
box()
?text
#=====> Cluster <=====#
PCH <- rep(c(1, 3, 20)[3], 3)
plot(0, xlim=c(0,2), ylim=0:1, type='n', axes=FALSE,xlab="",ylab="")
box()
X    <- c(0.17, 0.19, 0.52, 0.85, 1, 1.22, 1.49, 1.79, 1.85)
Y    <- c(0.3, 0.75, 0.5, 0.26, 0.73, 0.38, 0.67, 0.3, 0.8)
locs <- c(1, 4, 5, 3, 6, 2)
gps  <- list()
N    <- c(18, 12, 11, 13, 16, 14, 15, 16, 12)
R    <- sqrt(N/500)
p    <- matrix(c(6,  8, NA,
4,  4, NA,
4,  4, NA,
5,  4, NA,
8,  5, NA,
4,  5, NA,
5,  9, NA,
6,  5, NA,
4,  5, NA), 3)
p[3,] <- N - p[1,] - p[2,]
above <- c(-1, 1, 1, 1, 1, -1, 1, 1, .5)
for(i in 1:length(X)){
hold <- seq(0, 2*pi, len=99)
x    <- X[i] + (R[i]+0.02)*cos(hold)
y    <- Y[i] + (R[i]+0.02)*sin(hold)
polygon(x, y, border=COL[5,4])
if(i %in% c(3, 4, 8)){
polygon(x, y, border=COL[4], lty=2, lwd=1.5)
}
x    <- rep(NA, N[i])
y    <- rep(NA, N[i])
for(j in 1:N[i]){
inside <- FALSE
while(!inside){
xx <- runif(1, -R[i], R[i])
yy <- runif(1, -R[i], R[i])
if(sqrt(xx^2 + yy^2) < R[i]){
inside <- TRUE
x[j]   <- xx
y[j]   <- yy
}
}
}
type <- sample(1, N[i], TRUE)
pch  <- PCH[type]
col  <- COL[type]
x    <- X[i]+x
y    <- Y[i]+y
points(x, y, pch=pch, col=col)
these  <- 1:N[i]
if(i %in% c(3, 4, 8)){
points(x[these], y[these], pch=20, cex=0.8, col=colSamp)
points(x[these], y[these], cex=1.4, col=colSamp)
#points(x[these], y[these], pch=19, col=colSamp)
}
}
text(X, Y+above*(R+0.01), paste("Cluster", 1:length(X)), pos=2+above, cex=1.1)
#=====> Cluster <=====#
PCH <- rep(c(1, 3, 20)[3], 3)
plot(0, xlim=c(0,2), ylim=0:1, type='n', axes=FALSE,xlab="",ylab="")
box()
X    <- c(0.17, 0.19, 0.52, 0.85, 1, 1.22, 1.49, 1.79, 1.85)
Y    <- c(0.3, 0.75, 0.5, 0.26, 0.73, 0.38, 0.67, 0.3, 0.8)
locs <- c(1, 4, 5, 3, 6, 2)
gps  <- list()
N    <- c(18, 12, 11, 13, 16, 14, 15, 16, 12)
R    <- sqrt(N/500)
p    <- matrix(c(6,  8, NA,
4,  4, NA,
4,  4, NA,
5,  4, NA,
8,  5, NA,
4,  5, NA,
5,  9, NA,
6,  5, NA,
4,  5, NA), 3)
p[3,] <- N - p[1,] - p[2,]
above <- c(-1, 1, 1, 1, 1, -1, 1, 1, .5)
for(i in 1:length(X)){
hold <- seq(0, 2*pi, len=99)
x    <- X[i] + (R[i]+0.02)*cos(hold)
y    <- Y[i] + (R[i]+0.02)*sin(hold)
polygon(x, y, border=COL[5,4])
if(i %in% c(3, 4, 8)){
polygon(x, y, border=COL[4], lty=2, lwd=1.5)
}
x    <- rep(NA, N[i])
y    <- rep(NA, N[i])
for(j in 1:N[i]){
inside <- FALSE
while(!inside){
xx <- runif(1, -R[i], R[i])
yy <- runif(1, -R[i], R[i])
if(sqrt(xx^2 + yy^2) < R[i]){
inside <- TRUE
x[j]   <- xx
y[j]   <- yy
}
}
}
type <- sample(1, N[i], TRUE)
pch  <- PCH[type]
col  <- COL[type]
x    <- X[i]+x
y    <- Y[i]+y
points(x, y, pch=pch, col=col)
these  <- 1:N[i]
if(i %in% c(3, 4, 8)){
points(x[these], y[these], pch=20, cex=0.8, col=colSamp)
points(x[these], y[these], cex=1.4, col=colSamp)
#points(x[these], y[these], pch=19, col=colSamp)
}
}
text(X, Y+above*(R+0.01), paste("Cluster", 1:length(X)), pos=2+above, cex=1.1)
#=====> Cluster <=====#
PCH <- rep(c(1, 3, 20)[3], 3)
plot(0, xlim=c(0,2), ylim=0:1, type='n', axes=FALSE,xlab="",ylab="")
box()
X    <- c(0.17, 0.19, 0.52, 0.85, 1, 1.22, 1.49, 1.79, 1.85)
Y    <- c(0.3, 0.75, 0.5, 0.26, 0.73, 0.38, 0.67, 0.3, 0.8)
locs <- c(1, 4, 5, 3, 6, 2)
gps  <- list()
N    <- c(18, 12, 11, 13, 16, 14, 15, 16, 12)
R    <- sqrt(N/500)
p    <- matrix(c(6,  8, NA,
4,  4, NA,
4,  4, NA,
5,  4, NA,
8,  5, NA,
4,  5, NA,
5,  9, NA,
6,  5, NA,
4,  5, NA), 3)
p[3,] <- N - p[1,] - p[2,]
above <- c(-1, 1, 1, 1, 1, -1, 1, 1, .9)
for(i in 1:length(X)){
hold <- seq(0, 2*pi, len=99)
x    <- X[i] + (R[i]+0.02)*cos(hold)
y    <- Y[i] + (R[i]+0.02)*sin(hold)
polygon(x, y, border=COL[5,4])
if(i %in% c(3, 4, 8)){
polygon(x, y, border=COL[4], lty=2, lwd=1.5)
}
x    <- rep(NA, N[i])
y    <- rep(NA, N[i])
for(j in 1:N[i]){
inside <- FALSE
while(!inside){
xx <- runif(1, -R[i], R[i])
yy <- runif(1, -R[i], R[i])
if(sqrt(xx^2 + yy^2) < R[i]){
inside <- TRUE
x[j]   <- xx
y[j]   <- yy
}
}
}
type <- sample(1, N[i], TRUE)
pch  <- PCH[type]
col  <- COL[type]
x    <- X[i]+x
y    <- Y[i]+y
points(x, y, pch=pch, col=col)
these  <- 1:N[i]
if(i %in% c(3, 4, 8)){
points(x[these], y[these], pch=20, cex=0.8, col=colSamp)
points(x[these], y[these], cex=1.4, col=colSamp)
#points(x[these], y[these], pch=19, col=colSamp)
}
}
text(X, Y+above*(R+0.01), paste("Cluster", 1:length(X)), pos=2+above, cex=1.1)
#=====> Cluster <=====#
PCH <- rep(c(1, 3, 20)[3], 3)
plot(0, xlim=c(0,2), ylim=0:1, type='n', axes=FALSE,xlab="",ylab="")
box()
X    <- c(0.17, 0.19, 0.52, 0.85, 1, 1.22, 1.49, 1.79, 1.85)
Y    <- c(0.3, 0.75, 0.5, 0.26, 0.73, 0.38, 0.67, 0.3, 0.8)
locs <- c(1, 4, 5, 3, 6, 2)
gps  <- list()
N    <- c(18, 12, 11, 13, 16, 14, 15, 16, 12)
R    <- sqrt(N/500)
p    <- matrix(c(6,  8, NA,
4,  4, NA,
4,  4, NA,
5,  4, NA,
8,  5, NA,
4,  5, NA,
5,  9, NA,
6,  5, NA,
4,  5, NA), 3)
p[3,] <- N - p[1,] - p[2,]
above <- c(-1, 1, 1, 1, 1, -1, 1, 1, 1)
for(i in 1:length(X)){
hold <- seq(0, 2*pi, len=99)
x    <- X[i] + (R[i]+0.02)*cos(hold)
y    <- Y[i] + (R[i]+0.02)*sin(hold)
polygon(x, y, border=COL[5,4])
if(i %in% c(3, 4, 8)){
polygon(x, y, border=COL[4], lty=2, lwd=1.5)
}
x    <- rep(NA, N[i])
y    <- rep(NA, N[i])
for(j in 1:N[i]){
inside <- FALSE
while(!inside){
xx <- runif(1, -R[i], R[i])
yy <- runif(1, -R[i], R[i])
if(sqrt(xx^2 + yy^2) < R[i]){
inside <- TRUE
x[j]   <- xx
y[j]   <- yy
}
}
}
type <- sample(1, N[i], TRUE)
pch  <- PCH[type]
col  <- COL[type]
x    <- X[i]+x
y    <- Y[i]+y
points(x, y, pch=pch, col=col)
these  <- 1:N[i]
if(i %in% c(3, 4, 8)){
points(x[these], y[these], pch=20, cex=0.8, col=colSamp)
points(x[these], y[these], cex=1.4, col=colSamp)
#points(x[these], y[these], pch=19, col=colSamp)
}
}
text(X, Y+above*(R+0.01), paste("Cluster", 1:length(X)), pos=2+above, cex=1.1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(mosaic)
library(openintro)
library(knitr)
email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")] %>% kable()
head(email,n=10)
head(county,n=7)
plot(c(-0.15,1.3),0:1,type='n',axes=FALSE,xlab='',ylab='')
text(0.6, 0.9, 'all variables')
rect(0.4,0.8,0.8,1)
text(0.25, 0.5, 'numerical')
rect(0.1,0.4, 0.4, 0.6)
arrows(0.45, 0.78, 0.34, 0.62, length=0.08)
text(0.9, 0.5, 'categorical')
rect(0.73,0.4, 1.07, 0.6)
arrows(0.76, 0.78, 0.85, 0.62, length=0.08)
text(0, 0.1, 'continuous')
rect(-0.17, 0, 0.17, 0.2)
arrows(0.13, 0.38, 0.05, 0.22, length=0.08)
text(0.39, 0.1, 'discrete')
rect(0.25, 0, 0.53, 0.2)
arrows(0.35, 0.38, 0.4, 0.22, length=0.08)
text(0.77, 0.105, 'regular\ncategorical', col=COL[6], cex=0.7)
rect(0.64, 0, 0.9, 0.2, border=COL[6])
arrows(0.82, 0.38, 0.77, 0.22, length=0.08, col=COL[6])
text(1.12, 0.1, 'ordinal', col=COL[6])
rect(0.99, 0, 1.25, 0.2, border=COL[6])
arrows(1.02, 0.38, 1.1, 0.22, length=0.08, col=COL[6])
plot(county$poverty, county$fed_spend, pch=20, cex=0.7, col=COL[1,3], ylim=c(0,31.25), xlab="", ylab="Federal Spending Per Capita", axes=FALSE)
axis(1)
axis(2, at=seq(0, 30, 10))
box()
points(county$poverty, county$fed_spend, pch=20, cex = 0.18)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Poverty Rate (Percent)", 1, 1.9)
t1 <- county$poverty[1088]
t2 <- county$fed_spend[1088]
lines(c(t1,t1), c(-10,t2), lty=2, col=COL[4])
lines(c(-10,t1), c(t2,t2), lty=2, col=COL[4])
points(t1, t2, col=COL[4])
text(43, 29, "32 counties with higher\nfederal spending are not shown", cex=0.8)
pch <- 1
cex <- sqrt(county$pop2010/1e6)
colPop <- fadeColor(ifelse(cex > 0.35, COL[4], COL[1]), substr(gray(0.6+cex*0.1),2,3))
colSm  <- colPop
cexF   <- 2
cex <- 0.7
pch <- 20
gp1 <- cex < 0.32
colSm  <- COL[1,3]
colPop <- COL[1,3]
cexF   <- 1
plot(county$multiunit[gp1], county$homeownership[gp1], pch=pch, col=colSm, xlab="", ylab="Percent of Homeownership", axes=FALSE, cex=ifelse(cex < 0.32, 0.32, cex)[gp1], xlim=range(county$multiunit), ylim=range(county$homeownership))
at = seq(0, 100, 20)
axis(1, at, paste0(at, "%"))
axis(2, at, paste0(at, "%"))
box()
points(county$multiunit[!gp1], county$homeownership[!gp1], pch=pch, col=colPop, xlab="", ylab="Percent of Homeownership", cex=ifelse(cex < 0.32, 0.32, cex)[!gp1])
points(county$multiunit[!gp1], county$homeownership[!gp1], pch=20, cex = 0.2, col=COL[5,3])
#points(cc$housing_multi_unit, cc$home_ownership, pch=".", cex=1)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Percent of Units in Multi-Unit Structures", 1, 1.9, cex= 1)
county %>%
gf_point(fed_spend~poverty)
county %>%
filter(fed_spend<32) %>%
gf_point(fed_spend~poverty,
xlab="Poverty Rate (Percent)",
ylab="Federal Spending Per Capita",
title="A scatterplot showing fed_spend against poverty",
subtitle =  "Owsley County of Kentucky",
cex=1,alpha=0.2) %>%
gf_theme(theme_classic())
names(email50)
head(email50,n=10)
names(county)
dim(county)
dim(countyComplete)
names(countyComplete)
names(county)
dim(county)
str(county)
stent_study
stent_study %>%
mutate(id=1:441)
mutate(id=1:451)
1:451
stent_study %>%
mutate(id=1:451)
stent_study %>%
mutate(id=1:451) %>%
pivot_longer(c('outcome30','outcome365'),names_to = 'Time',values_to = 'Result')
stent_study <- read_csv("data/stent_study.csv")
stent_study %>%
mutate(id=1:451) %>%
pivot_longer(c('outcome30','outcome365'),names_to = 'Time',values_to = 'Result')
stent_study <- read_csv("data/stent_study.csv")
stent_study %>%
mutate(patient_id=1:451) %>%
pivot_longer(c('outcome30','outcome365'),names_to = 'Time',values_to = 'Result')
stent_study <- read_csv("data/stent_study.csv")
stent_study %>%
mutate(patient_id=1:451) %>%
pivot_longer(c('outcome30','outcome365'),names_to = 'Time',values_to = 'Result') %>%
head(n=10)
stent_study <- read_csv("data/stent_study.csv")
stent_study %>%
mutate(patient_id=1:451) %>%
rename(Month=outcome30,Year=outcome365)
pivot_longer(c('Month','Year'),names_to = 'Time',values_to = 'Result') %>%
head(n=10)
stent_study <- read_csv("data/stent_study.csv")
stent_study %>%
mutate(patient_id=1:451) %>%
rename(Month=outcome30,Year=outcome365) %>%
pivot_longer(c('Month','Year'),names_to = 'Time',values_to = 'Result') %>%
head(n=10)
View(stent_study)
View(stent_study)
stent_study %>%
mutate(patient_id=1:451) %>%
rename(Month=outcome30,Year=outcome365) %>%
pivot_longer(c('Month','Year'),names_to = 'Time',values_to = 'Result') %>%
select(patient_id,trmt,Time,Result) %>%
head(n=10)
stent_study %>%
mutate(patient_id=1:451) %>%
rename(Month=outcome30,Year=outcome365) %>%
pivot_longer(c('Month','Year'),names_to = 'time',values_to = 'result') %>%
select(patient_id,trmt,time,result) %>%
head(n=10)
stent_study %>%
mutate(patient_id=1:451) %>%
rename(month=outcome30,year=outcome365) %>%
pivot_longer(c('month','year'),names_to = 'time',values_to = 'result') %>%
select(patient_id,trmt,time,result) %>%
head(n=10)
knitr::opts_chunk$set(echo = TRUE)
gf_bar(~outcome30|trmt,data = stent_study)
stent_study %>%
gf_props(~trmt,fill=~outcome30,position='fill') %>%
gf_labs(title="Impact of Stents of Stroke",
subtitle='Experiment with 451 Patients',
x="Experimental Group",
y="Number of Events")
stent_study <- data.frame(group =c(rep('trmt', 224), rep('control', 227)), outcome30 = c(rep(c('stroke', 'no_event'), c(33, 191)), rep(c('stroke', 'no_event'), c(13, 214))), outcome365 = c(rep(c('stroke', 'no_event'), c(45, 179)), rep(c('stroke', 'no_event'), c(28, 199))))
write_csv(stent_study,"data\stent_study.csv")
write_csv(stent_study,"data/stent_study.csv")
stent_study <- read_csv("data/stent_study.csv")
head(stent_study,n=10)
stent_study %>%
sample()
stent_study %>%
sample() %>%
head()
stent_study <- data.frame(group =c(rep('trmt', 224), rep('control', 227)), outcome30 = c(rep(c('stroke', 'no_event'), c(33, 191)), rep(c('stroke', 'no_event'), c(13, 214))), outcome365 = c(rep(c('stroke', 'no_event'), c(45, 179)), rep(c('stroke', 'no_event'), c(28, 199))))
stent_study <- stent_study %>%
sample() %>%
select(-orig.id)
stent_study
write_csv(stent_study,"data/stent_study.csv")
stent_study <- read_csv("data/stent_study.csv")
head(stent_study,n=10)
tally(outcome30~group,data=stent_study,margins = TRUE)
tally(outcome30~group,data=stent_study,format='proportion',margins = TRUE)
gf_bar(~outcome30|group,data = stent_study)
stent_study %>%
gf_props(~group,fill=~outcome30,position='fill') %>%
gf_labs(title="Impact of Stents of Stroke",
subtitle='Experiment with 451 Patients',
x="Experimental Group",
y="Number of Events")
stent_study %>%
mutate(patient_id=1:451) %>%
rename(month=outcome30,year=outcome365) %>%
pivot_longer(c('month','year'),names_to = 'time',values_to = 'result') %>%
select(patient_id,group,time,result) %>%
head(n=10)
names(county)
poverty
summary(county$poverty)
summary(county$fed_spend)
summary(county$pop2000)
knitr::opts_chunk$set(echo = TRUE)
data(COL)
plot(email50$num_char, email50$line_breaks, pch=19, cex=1.3, col=COL[1,4], xlab="", ylab="Number of Lines", axes=FALSE)
library(tidyverse)
library(mosaic)
library(openintro)
plot(county$poverty, county$fed_spend, pch=20, cex=0.7, col=COL[1,3], ylim=c(0,31.25), xlab="", ylab="Federal Spending Per Capita", axes=FALSE)
axis(1)
axis(2, at=seq(0, 30, 10))
box()
points(county$poverty, county$fed_spend, pch=20, cex = 0.18)
#rug(county$poverty[county$fed_spend > 40], side=3)
mtext("Poverty Rate (Percent)", 1, 1.9)
t1 <- county$poverty[1088]
t2 <- county$fed_spend[1088]
lines(c(t1,t1), c(-10,t2), lty=2, col=COL[4])
lines(c(-10,t1), c(t2,t2), lty=2, col=COL[4])
points(t1, t2, col=COL[4])
text(43, 29, "32 counties with higher\nfederal spending are not shown", cex=0.8)
data(COL)
plot(email50$num_char, email50$line_breaks, pch=19, cex=1.3, col=COL[1,4], xlab="", ylab="Number of Lines", axes=FALSE)
axis(2)
axis(1)
box()
points(email50$num_char, email50$line_breaks, cex=1.3, col=COL[1,1])
mtext("Number of Characters (in thousands)", 1, 1.9)
data(cars)
data(COL)
plot(cars$weight, cars$price, xlab='Weight (Pounds)', ylab='Price ($1000s)', pch=19, col=COL[1,2], ylim=c(0, max(cars$price)))
w  <- seq(1000, 5000, 100)
# Rough Model
g1 <- lm(price ~ weight, cars, weights=1/weight^2)
g2 <- lm(price ~ weight + I(weight^2), cars, weights=1/weight^2)
p  <- predict(g2, data.frame(weight=w))
lines(w, p, lty=2, col=COL[5,3])
