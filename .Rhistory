select(spam,number) %>%
inspect()
tally(~spam+number,data=email,margins = TRUE)
email <- email %>%
mutate(spam = factor(email$spam,levels=c(1,0),labels=c("spam","not spam")))
email %>%
select(spam,number) %>%
inspect()
tally(~spam+number,data=email,margins = TRUE)
tally(~number,data=email)
tally(~number,data=email,format='proportion')
round(tally(~number,data=email,format='percent'),2)
email %>%
gf_bar(~number)
email %>%
gf_props(~number)
email %>%
gf_props(~number,title="The proportions of emails with a number in it",
subtitle="From 2012",xlab="Type of number in the email",ylab="Proportion of emails") %>%
gf_theme(theme_bw())
tally(spam~number,data=email,margins = TRUE,format='proportion')
tally(number~spam,data=email,margins = TRUE,format='proportion')
email <- email %>%
mutate(format = factor(email$format,levels=c(1,0),labels=c("HTML","text")))
tally(spam~format,data=email,margins = TRUE,format="proportion")
tally(spam~number,email,format='proportion',margin=TRUE)
tally(number~spam,email,format='proportion',margin=TRUE)
email %>%
gf_bar(~number,fill=~spam)
email %>%
gf_props(~number,fill=~spam,position='fill')
mosaic(~number,data=email)
tally(~number+spam,data=email,format='proportion')
mosaic(~number+spam,data=email)
tally(~spam,data=email,format="proportion")
tally(number~spam,data=email,margins = TRUE,format="proportion")
mosaic(~spam+number,data=email)
pie(table(email$number), col=COL[c(3,1,2)], radius=0.75)
library(usdata)
county_M377 <- county_complete %>%
select(name, state, pop2000, pop2010, fed_spend=fed_spending_2009, poverty=poverty_2010,
homeownership = homeownership_2010, multi_unit = housing_multi_unit_2010,
income = per_capita_income_2010, med_income = median_household_income_2010) %>%
mutate(fed_spend=fed_spend/pop2010)
county_M377 %>%
select(pop2000,pop2010,med_income) %>%
inspect()
cc_reduced <- county_M377 %>%
drop_na(pop2000) %>%
select(pop2000,pop2010,med_income) %>%
mutate(pop_gain = sign(pop2010-pop2000))
tally(~pop_gain,data=cc_reduced)
cc_reduced <- cc_reduced %>%
filter(pop_gain != 0) %>%
mutate(pop_gain = factor(pop_gain,levels=c(-1,1),labels=c("Loss","Gain")))
inspect(cc_reduced)
cc_reduced %>%
gf_boxplot(med_income~pop_gain,
subtitle="The income data were collected between 2006 and 2010.",
xlab="Population change from 2000 to 2010",
ylab="Median Household Income")
cc_reduced %>%
gf_dens(~med_income,color=~pop_gain,lwd=1)
knitr::opts_chunk$set(echo = TRUE)
library(openintro)
library(vcd)
library(vcdExtra)
library(mosaic)
library(tidyverse)
levels(immigration$political)
inspect(immigration)
round(tally(~response+political,data=immigration,format="percent",margins = TRUE),2)
round(tally(response~political,data=immigration,format="percent",margins = TRUE),2)
immigration %>%
gf_props(~political,fill=~response,position="fill") %>%
gf_labs(title="Tampa Florida Voter Views on Illegal Immigrant Workers",
subtitle="Broken down by political views",x="Political View",y="Proportion") %>%
gf_theme(theme_bw())
mosaic(stance~ideology,data=dream,sub="Views on the DREAM Act")
mosaic(survived~transplant,data=heart_transplant)
heart_transplant %>%
gf_boxplot(survtime~transplant) %>%
gf_labs(title="Survival times for tranplant experiment",
sub="Treatment group had the transplant",x="Tranplant",y="Survival time in days") %>%
gf_theme(theme_classic())
mosaic(stance~ideology,data=dream)
knitr::opts_chunk$set(echo = TRUE)
factorial(365)
365*364
prod(365:364)
1- prod(365:348)/(365^18)
birthday_prob <- function(n=20){
1- prod(365:(365-(n-1)))/(365^n)
}
birthday_prob(18)
birthday_prob(23)
birthday_prob(1:20)
birthday_prob <- Vectorize(birthday_prob)
birthday_prob(1:20)
gf_line(birthday_prob(1:100)~ seq(1,100),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 2 people with matching birthdays")
library(mosaic)
library(tidyverse)
gf_line(birthday_prob(1:100)~ seq(1,100),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 2 people with matching birthdays")
inspect(Births)
Births %>%
filter(year == 1969) %>%
gf_point(births~day_of_year)
Births %>%
filter(year == 1969) %>%
gf_point(births~day_of_year,color=~factor(day_of_week))
Births %>%
group_by(year) %>%
summarise(n=n())
Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(year) %>%
summarise(n=n())
birth_data <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
head(birth_data)
birth_data <- Births %>%
filter(!(year %in% c(1972,1976,1980,1984,1988))) %>%
group_by(day_of_year) %>%
summarise(n=sum(births))
birth_data %>%
gf_line(n~day_of_year,
xlab="Day of the year",
ylab="Number of births")
birth_data %>%
gf_point(n~day_of_year,
xlab="Day of the year",
ylab="Number of births")
birth_data %>%
select(n) %>%
pull()
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
days <- seq(1,365)
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
birth_data_weights <- birth_data %>%
select(n) %>%
pull()
set.seed(20)
(do(1000)*length(unique(sample(days,size=18,replace = TRUE,prob=birth_data_weights)))) %>%
mutate(match=if_else(length==18,0,1)) %>%
summarise(prob=mean(match))
knitr::opts_chunk$set(echo = TRUE)
(do(10000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
mutate(match=if_else(length==22,1,0)) %>%
summarise(prob=mean(match))
(do(1000)*length(unique(sample(days,size=23,replace = TRUE)))) %>%
gf_bar(~length)
choose(23,2)*prod(365:344)/365^23
exactly_two <- function(n){
choose(n,2)*prod(365:(365-(n-2)))/365^n
}
exactly_two(23)
exactly_two <- Vectorize(exactly_two)
gf_line(exactly_two(1:100)~ seq(1,100),
xlab="Number of People",
ylab="Probability of Match",
title="Probability of exactly least 2 people with matching birthdays")
set.seed(10)
temp <- table(sample(days,size=23,replace = TRUE))
temp
(sum(temp==2) == 2)+0
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 3)==1)+0)) %>%
summarise(prob=mean(result))
(do(10000)*((sum(table(sample(days,size=23,replace = TRUE)) == 2)==2)+0)) %>%
summarise(prob=mean(result))
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
results %>%
filter(heads==2) %>%
summarize(prob=n()/10000)
set.seed(73)
rflip(3)
results <- do(10000)*rflip(3)
head(results)
results %>%
gf_bar(~heads)
library(tidyverse)
results %>%
filter(heads==2) %>%
summarize(prob=n()/10000)
results %>%
group_by(heads) %>%
mutate(n=n())
results %>%
count(heads)
results %>%
count(heads) %>%
mutate(prop=n/sum(n))
Cards <- read_csv("data/Cards.csv")
inspect(Cards)
head(cards)
head(Cards)
Cards %>%
filter(suit == "Club") %>%
select(rank,suit)
results <- do(10000)*sample(Cards,1)
head(results)
results %>%
filter(suit == "Club") %>%
summarize(prob=n()/10000)
results %>%
count(suit)
results %>%
count(suit) %>%
mutate(prob=n/sum(n))
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A")) %>%
select(rank,suit)
results <- do(10000)*sample(Cards,1)
head(results)
results %>%
filter(rank %in% c(10, "J", "Q", "K", "A")) %>%
summarize(prob=n()/10000)
results %>%
mutate(face=rank %in% c(10, "J", "Q", "K", "A"))%>%
summarize(prob=mean(face))
Cards %>%
filter(rank %in% c(10, "J", "Q", "K", "A"),suit=="Club") %>%
select(rank,suit)
results %>%
mutate(face=(rank %in% c(10, "J", "Q", "K", "A"))&(suit=="Club"))%>%
summarize(prob=mean(face))
1-(364/365)^20
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
n<-1:80
mybday<-function(x) 1-(364/365)^x
mybday <- Vectorize(mybday)
mybday(20)
gf_line(mybday(n)~ n,
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 1 person matching my birthday")
prob <- mybday(1:300)
n<-1:300
which(prob>= .5)
n<-1:80
mybday<-function(x) 1-(364/365)^x
mybday <- Vectorize(mybday)
mybday(20)
n<-1:300
mybday<-function(x) 1-(364/365)^x
mybday <- Vectorize(mybday)
mybday(20)
gf_line(mybday(n)~ n,
xlab="Number of People",
ylab="Probability of Match",
title="Probability of at least 1 person matching my birthday")
prob <- mybday(n)
which(prob>= .5)
30*10/(6^5)
choose(13,2)*choose(4,2)*choose(4,2)*choose(44,1)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
set.seed(1154)
data.frame(do(500000)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
set.seed(1154)
data.frame(do(50000)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
data.frame(do(50000)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
6157/(6157 + 25743)
set.seed(501)
results <- rflip(100000,summarize = TRUE)
results
data.frame(do(50226)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
data.frame(do(49774)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
6270/(6270+25512)
set.seed(9021)
results <- rflip(100000,prob=.75,summarize = TRUE)
results
data.frame(do(75023)*rflip(3)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
100000-75023
data.frame(do(24977)*rflip(3,prob=0.8)) %>%
filter(heads==3) %>%
summarise(count=n()) %>%
pull()
9579/(9579+12789)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
y<-c(0,1,2,3,4,5)
sum(y*c(6,10,8,6,4,2)/36)
y<-c(0,1,2,3,4,5)
mean_y<-sum(y*c(6,10,8,6,4,2)/36)
mean_y
(y-mean_y)^2
(y-mean_y)^2*c(6,10,8,6,4,2)/36)
(y-mean_y)^2*(c(6,10,8,6,4,2)/36)
sum((y-mean_y)^2*(c(6,10,8,6,4,2)/36))
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
results<-do(10)*sample(1:6,1,replace=TRUE)
results
set.seed(61)
sample(1:6,4,replace=TRUE)
results<-do(10000)*sample(1:6,1,replace=TRUE)
tally(~sample,data=results,format="percent")
mean(~sample,data=results)
var(~sample,data=results)
var(~sample,data=results)*(10000-1)/10000
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain)
my_pdf <- function(x)integrate(function(y)y^2/18,-x,x)$value
my_pdf<-Vectorize(my_pdf)
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain)
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic())
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Problem 1 pdf")
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Problem 1 pdf",x="",y="pdf")
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Unscaled pdf",x="",y="Unscaled pdf")
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Pdf for different values of k",x="k",y="Unscaled pdf")
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Pdf for different values of k",x="k",y="Cummulative Probability") %>%
gf_hline(yintercept = 1,color = "blue")
x<-seq(-3,3,0.001)
fx<-x^2
gf_line(fx~x,ylab="f(x)",main="pdf of X")
x<-seq(-3,3,0.001)
fx<-x^2
gf_line(fx~x,ylab="f(x)",title="pdf of X")
x<-seq(-3,3,0.001)
fx<-x^2
gf_line(fx~x,ylab="f(x)",title="pdf of X") %>%
gf_theme(theme_classic())
ggplot(data.frame(x=c(-3, 3)), aes(x)) +
stat_function(fun=function(x) x^2/18)
ggplot(data.frame(x=c(-3, 3)), aes(x)) +
stat_function(fun=function(x) x^2/18) +
theme_classic()
ggplot(data.frame(x=c(-3, 3)), aes(x)) +
stat_function(fun=function(x) x^2/18) +
theme_classic() +
labs(y="f(x)")
ggplot(data.frame(x=c(-3, 3)), aes(x)) +
stat_function(fun=function(x) x^2/18) +
theme_classic() +
labs(y="f(x)",title="pdf of X")
curve(x^2/18,from=-3,to=3,ylab="f(x)",main="pdf of X")
domain <- seq(.01,5,.1)
gf_line(my_pdf(domain)~domain) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="Cumulative probability for different values of k",x="k",y="Cummulative Probability") %>%
gf_hline(yintercept = 1,color = "blue")
x<-seq(-3.5,3.5,0.001)
fx<-pmin(1,(1*(x>=-3)*(x^3/54+1/2)))
gf_line(fx~x,ylab="F(x)",main="cdf of X")
x<-seq(-3.5,3.5,0.001)
fx<-pmin(1,(1*(x>=-3)*(x^3/54+1/2)))
gf_line(fx~x,ylab="F(x)",main="cdf of X") %>%
gf_labs(title="Cdf of X",x="x",y="F(x)") %>%
gf_theme(theme_classic())
curve(x^2/18,from=-3,to=3,ylab="f(x)",main="pdf of X")
t<-seq(2.21,3,0.001)
polygon(c(2.21,t,3),c(0,t^2/18,0),density=15)
polygon(c(-2.21,-t,-3),c(0,t^2/18,0),density=15)
text(-2.3,0.4,"0.3")
text(2.3,0.4,"0.3")
results %>%
gf_dens(~cuberoot,title="pdf",x="") %>%
gf_theme(theme_classic())
cuberoot <- function(x) {
sign(x) * abs(x)^(1/3)}
set.seed(4)
results <- do(10000)*cuberoot((runif(1)-.5)*54)
results %>%
gf_dens(~cuberoot,title="pdf",x="") %>%
gf_theme(theme_classic())
cuberoot <- function(x) {
sign(x) * abs(x)^(1/3)}
set.seed(4)
results <- do(10000)*cuberoot((runif(1)-.5)*54)
results %>%
gf_dens(~cuberoot,title="pdf",x="") %>%
gf_theme(theme_classic())
results %>%
gf_dens(~cuberoot) %>%
gf_theme(theme_classic())
results %>%
gf_dens(~cuberoot) %>%
gf_theme(theme_classic()) %>%
gf_labs((title="pdf from simulation",x"x",y="f(x)"))
results %>%
gf_dens(~cuberoot) %>%
gf_theme(theme_classic()) %>%
gf_labs((title="pdf from simulation",x="x",y="f(x)"))
results %>%
gf_dens(~cuberoot) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="pdf from simulation",x="x",y="f(x)")
?gf_dens
results %>%
gf_dens(~cuberoot,xlim=c(-3,3)) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="pdf from simulation",x="x",y="f(x)")
gf_refine
?gf_refine
results %>%
gf_dens(~cuberoot) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="pdf from simulation",x="x",y="f(x)") %>%
gf_refine(xlim=c(-3,3))
results %>%
gf_dens(~cuberoot) %>%
gf_theme(theme_classic()) %>%
gf_labs(title="pdf from simulation",x="x",y="f(x)")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos='ht')
library(mosaic)
library(tidyverse)
gf_dist("unif") %>%
gf_theme(theme_classic())
gf_dist("unif",title="Pdf of Uniform random variable") %>%
gf_theme(theme_classic())
gf_dist("unif",title="Pdf of Uniform random variable",y="f(x)") %>%
gf_theme(theme_classic())
gf_dist("unif",title="Pdf of Uniform random variable",ylab="f(x)") %>%
gf_theme(theme_classic())
integrate(function(x)dunif(x),0,1)
gf_dist("exp") %>%
gf_theme(theme_classic())
##median
qexp(0.5,1/3)
##95th percentile
qexp(0.95,1/3)
log(.5)
log(.5)*3
Gamma(1)
gamma(1)
gamma(2)
gamma(3)
gamma(4)
?gamma
?rweibull
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(tidyverse)
mean(rexp(10000,2/3) >=10)
set.seed(616)
mean(rpois(10000,40/6) == 0)
mean(rexp(10000,2/3) >=10)
set.seed(616)
mean(rpois(100000,40/6) == 0)
mean(rexp(100000,2/3) >=10)
1-pexp(10,2/3)
?rgamma
qgamma(c(0.025,0.975),40,2)
qgamma(.95,40,2)
qnorm(0.9,330,50)
qnorm(0.9,330,50)
rulethumb<-function(mu,sd){
pnorm(mu+c(1,2,3)*sd,mu,sd)-pnorm(mu-c(1,2,3)*sd,mu,sd)
}
rulethumb(15,12)
rulethumb(0,1)
